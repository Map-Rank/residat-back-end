<?xml version="1.0" encoding="UTF-8"?>
<crap_result>
  <project/>
  <timestamp>2024-12-30 15:00:54</timestamp>
  <stats>
    <name>Method Crap Stats</name>
    <methodCount>307</methodCount>
    <crapMethodCount>1</crapMethodCount>
    <crapLoad>14</crapLoad>
    <totalCrap>972.07</totalCrap>
    <crapMethodPercent>0.33</crapMethodPercent>
  </stats>
  <methods>
    <method>
      <package>App\Console</package>
      <className>App\Console\Kernel</className>
      <methodName>schedule</methodName>
      <methodSignature>schedule(Illuminate\Console\Scheduling\Schedule $schedule): void</methodSignature>
      <fullMethod>schedule(Illuminate\Console\Scheduling\Schedule $schedule): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Console</package>
      <className>App\Console\Kernel</className>
      <methodName>commands</methodName>
      <methodSignature>commands(): void</methodSignature>
      <fullMethod>commands(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Exceptions</package>
      <className>App\Exceptions\Handler</className>
      <methodName>register</methodName>
      <methodSignature>register(): void</methodSignature>
      <fullMethod>register(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\AuthController</className>
      <methodName>register</methodName>
      <methodSignature>register(App\Http\Requests\Auth\RegisterRequest $request)</methodSignature>
      <fullMethod>register(App\Http\Requests\Auth\RegisterRequest $request)</fullMethod>
      <crap>9.59</crap>
      <complexity>8</complexity>
      <coverage>70.83</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\AuthController</className>
      <methodName>login</methodName>
      <methodSignature>login(App\Http\Requests\Auth\LoginRequest $request)</methodSignature>
      <fullMethod>login(App\Http\Requests\Auth\LoginRequest $request)</fullMethod>
      <crap>6</crap>
      <complexity>6</complexity>
      <coverage>95</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\AuthController</className>
      <methodName>logout</methodName>
      <methodSignature>logout()</methodSignature>
      <fullMethod>logout()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\AuthController</className>
      <methodName>verifyToken</methodName>
      <methodSignature>verifyToken(Illuminate\Support\Facades\Request $request)</methodSignature>
      <fullMethod>verifyToken(Illuminate\Support\Facades\Request $request)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\CompanyController</className>
      <methodName>store</methodName>
      <methodSignature>store(App\Http\Requests\CompanyRequest $request)</methodSignature>
      <fullMethod>store(App\Http\Requests\CompanyRequest $request)</fullMethod>
      <crap>11.52</crap>
      <complexity>11</complexity>
      <coverage>83.72</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\DisasterController</className>
      <methodName>index</methodName>
      <methodSignature>index()</methodSignature>
      <fullMethod>index()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\DisasterController</className>
      <methodName>show</methodName>
      <methodSignature>show(App\Models\Disaster $disaster)</methodSignature>
      <fullMethod>show(App\Models\Disaster $disaster)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\EmailVerificationController</className>
      <methodName>verify</methodName>
      <methodSignature>verify(Illuminate\Foundation\Auth\EmailVerificationRequest $request)</methodSignature>
      <fullMethod>verify(Illuminate\Foundation\Auth\EmailVerificationRequest $request)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\EmailVerificationController</className>
      <methodName>resend</methodName>
      <methodSignature>resend(Illuminate\Http\Request $request)</methodSignature>
      <fullMethod>resend(Illuminate\Http\Request $request)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\EventController</className>
      <methodName>index</methodName>
      <methodSignature>index(Illuminate\Http\Request $request)</methodSignature>
      <fullMethod>index(Illuminate\Http\Request $request)</fullMethod>
      <crap>10.86</crap>
      <complexity>7</complexity>
      <coverage>57.14</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\EventController</className>
      <methodName>store</methodName>
      <methodSignature>store(App\Http\Requests\EventRequest $request)</methodSignature>
      <fullMethod>store(App\Http\Requests\EventRequest $request)</fullMethod>
      <crap>7.9</crap>
      <complexity>6</complexity>
      <coverage>62.5</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\EventController</className>
      <methodName>show</methodName>
      <methodSignature>show(App\Models\Event $event)</methodSignature>
      <fullMethod>show(App\Models\Event $event)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\EventController</className>
      <methodName>update</methodName>
      <methodSignature>update(App\Http\Requests\EventRequest $request, App\Models\Event $event)</methodSignature>
      <fullMethod>update(App\Http\Requests\EventRequest $request, App\Models\Event $event)</fullMethod>
      <crap>7.9</crap>
      <complexity>6</complexity>
      <coverage>62.5</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\EventController</className>
      <methodName>destroy</methodName>
      <methodSignature>destroy($id)</methodSignature>
      <fullMethod>destroy($id)</fullMethod>
      <crap>4.25</crap>
      <complexity>4</complexity>
      <coverage>75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\FeedbackController</className>
      <methodName>store</methodName>
      <methodSignature>store(App\Http\Requests\FeedbackRequest $request)</methodSignature>
      <fullMethod>store(App\Http\Requests\FeedbackRequest $request)</fullMethod>
      <crap>7.1</crap>
      <complexity>6</complexity>
      <coverage>68.75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\FollowController</className>
      <methodName>follow</methodName>
      <methodSignature>follow(Illuminate\Http\Request $request, $id)</methodSignature>
      <fullMethod>follow(Illuminate\Http\Request $request, $id)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\FollowController</className>
      <methodName>unfollow</methodName>
      <methodSignature>unfollow(Illuminate\Http\Request $request, $id)</methodSignature>
      <fullMethod>unfollow(Illuminate\Http\Request $request, $id)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\FollowController</className>
      <methodName>followers</methodName>
      <methodSignature>followers($id)</methodSignature>
      <fullMethod>followers($id)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\FollowController</className>
      <methodName>following</methodName>
      <methodSignature>following($id)</methodSignature>
      <fullMethod>following($id)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\NotificationController</className>
      <methodName>index</methodName>
      <methodSignature>index(Illuminate\Http\Request $request)</methodSignature>
      <fullMethod>index(Illuminate\Http\Request $request)</fullMethod>
      <crap>8.55</crap>
      <complexity>6</complexity>
      <coverage>58.62</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\NotificationController</className>
      <methodName>store</methodName>
      <methodSignature>store(App\Http\Requests\NotificationRequest $request, App\Service\UtilService $firebaseService)</methodSignature>
      <fullMethod>store(App\Http\Requests\NotificationRequest $request, App\Service\UtilService $firebaseService)</fullMethod>
      <crap>5.06</crap>
      <complexity>5</complexity>
      <coverage>86.36</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\NotificationController</className>
      <methodName>show</methodName>
      <methodSignature>show(App\Models\Notification $notification)</methodSignature>
      <fullMethod>show(App\Models\Notification $notification)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\NotificationController</className>
      <methodName>update</methodName>
      <methodSignature>update(App\Http\Requests\NotificationRequest $request, App\Models\Notification $notification)</methodSignature>
      <fullMethod>update(App\Http\Requests\NotificationRequest $request, App\Models\Notification $notification)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\NotificationController</className>
      <methodName>destroy</methodName>
      <methodSignature>destroy(App\Models\Notification $notification)</methodSignature>
      <fullMethod>destroy(App\Models\Notification $notification)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PackageController</className>
      <methodName>index</methodName>
      <methodSignature>index()</methodSignature>
      <fullMethod>index()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PackageController</className>
      <methodName>show</methodName>
      <methodSignature>show($id)</methodSignature>
      <fullMethod>show($id)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PackageController</className>
      <methodName>store</methodName>
      <methodSignature>store(App\Http\Requests\PackageRequest $request)</methodSignature>
      <fullMethod>store(App\Http\Requests\PackageRequest $request)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PackageController</className>
      <methodName>update</methodName>
      <methodSignature>update(App\Http\Requests\PackageRequest $request, $packageId)</methodSignature>
      <fullMethod>update(App\Http\Requests\PackageRequest $request, $packageId)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PackageController</className>
      <methodName>destroy</methodName>
      <methodSignature>destroy(App\Models\Package $package)</methodSignature>
      <fullMethod>destroy(App\Models\Package $package)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PasswordController</className>
      <methodName>forgotPassword</methodName>
      <methodSignature>forgotPassword(Illuminate\Http\Request $request)</methodSignature>
      <fullMethod>forgotPassword(Illuminate\Http\Request $request)</fullMethod>
      <crap>2.08</crap>
      <complexity>2</complexity>
      <coverage>72.73</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PasswordController</className>
      <methodName>reset</methodName>
      <methodSignature>reset(Illuminate\Http\Request $request): Illuminate\Http\JsonResponse</methodSignature>
      <fullMethod>reset(Illuminate\Http\Request $request): Illuminate\Http\JsonResponse</fullMethod>
      <crap>2.01</crap>
      <complexity>2</complexity>
      <coverage>85</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PasswordController</className>
      <methodName>updatePassword</methodName>
      <methodSignature>updatePassword(App\Http\Requests\Auth\UpdatePasswordRequest $request): Illuminate\Http\JsonResponse</methodSignature>
      <fullMethod>updatePassword(App\Http\Requests\Auth\UpdatePasswordRequest $request): Illuminate\Http\JsonResponse</fullMethod>
      <crap>3.14</crap>
      <complexity>3</complexity>
      <coverage>75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PaymentController</className>
      <methodName>index</methodName>
      <methodSignature>index()</methodSignature>
      <fullMethod>index()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PaymentController</className>
      <methodName>create</methodName>
      <methodSignature>create()</methodSignature>
      <fullMethod>create()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PaymentController</className>
      <methodName>store</methodName>
      <methodSignature>store(App\Http\Requests\PaymentRequest $request, App\Models\Subscription $subscription)</methodSignature>
      <fullMethod>store(App\Http\Requests\PaymentRequest $request, App\Models\Subscription $subscription)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PaymentController</className>
      <methodName>show</methodName>
      <methodSignature>show(string $id)</methodSignature>
      <fullMethod>show(string $id)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PaymentController</className>
      <methodName>edit</methodName>
      <methodSignature>edit(string $id)</methodSignature>
      <fullMethod>edit(string $id)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PaymentController</className>
      <methodName>update</methodName>
      <methodSignature>update(Illuminate\Http\Request $request, string $id)</methodSignature>
      <fullMethod>update(Illuminate\Http\Request $request, string $id)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PaymentController</className>
      <methodName>destroy</methodName>
      <methodSignature>destroy(string $id)</methodSignature>
      <fullMethod>destroy(string $id)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PostController</className>
      <methodName>index</methodName>
      <methodSignature>index(Illuminate\Http\Request $request): Illuminate\Http\JsonResponse</methodSignature>
      <fullMethod>index(Illuminate\Http\Request $request): Illuminate\Http\JsonResponse</fullMethod>
      <crap>7.93</crap>
      <complexity>7</complexity>
      <coverage>73.33</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PostController</className>
      <methodName>store</methodName>
      <methodSignature>store(App\Http\Requests\PostRequest $request)</methodSignature>
      <fullMethod>store(App\Http\Requests\PostRequest $request)</fullMethod>
      <crap>15</crap>
      <complexity>10</complexity>
      <coverage>63.16</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PostController</className>
      <methodName>show</methodName>
      <methodSignature>show(string $id)</methodSignature>
      <fullMethod>show(string $id)</fullMethod>
      <crap>2.03</crap>
      <complexity>2</complexity>
      <coverage>80</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PostController</className>
      <methodName>update</methodName>
      <methodSignature>update(App\Http\Requests\PostRequest $request, string $id)</methodSignature>
      <fullMethod>update(App\Http\Requests\PostRequest $request, string $id)</fullMethod>
      <crap>24.64</crap>
      <complexity>12</complexity>
      <coverage>55.56</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PostController</className>
      <methodName>destroy</methodName>
      <methodSignature>destroy(Illuminate\Http\Request $request, string $id)</methodSignature>
      <fullMethod>destroy(Illuminate\Http\Request $request, string $id)</fullMethod>
      <crap>4.84</crap>
      <complexity>4</complexity>
      <coverage>62.5</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PostController</className>
      <methodName>like</methodName>
      <methodSignature>like(string $id): Illuminate\Http\JsonResponse</methodSignature>
      <fullMethod>like(string $id): Illuminate\Http\JsonResponse</fullMethod>
      <crap>13.3</crap>
      <complexity>5</complexity>
      <coverage>30.77</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PostController</className>
      <methodName>comment</methodName>
      <methodSignature>comment(Illuminate\Http\Request $request, string $id): Illuminate\Http\JsonResponse</methodSignature>
      <fullMethod>comment(Illuminate\Http\Request $request, string $id): Illuminate\Http\JsonResponse</fullMethod>
      <crap>4.01</crap>
      <complexity>4</complexity>
      <coverage>91.3</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PostController</className>
      <methodName>share</methodName>
      <methodSignature>share(string $id): Illuminate\Http\JsonResponse</methodSignature>
      <fullMethod>share(string $id): Illuminate\Http\JsonResponse</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>94.12</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\PostController</className>
      <methodName>deleteInteraction</methodName>
      <methodSignature>deleteInteraction($id)</methodSignature>
      <fullMethod>deleteInteraction($id)</fullMethod>
      <crap>8.3</crap>
      <complexity>6</complexity>
      <coverage>60</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\ProfileController</className>
      <methodName>profile</methodName>
      <methodSignature>profile(Illuminate\Http\Request $request): Illuminate\Http\JsonResponse</methodSignature>
      <fullMethod>profile(Illuminate\Http\Request $request): Illuminate\Http\JsonResponse</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\ProfileController</className>
      <methodName>showProfile</methodName>
      <methodSignature>showProfile($id): Illuminate\Http\JsonResponse</methodSignature>
      <fullMethod>showProfile($id): Illuminate\Http\JsonResponse</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\ProfileController</className>
      <methodName>interactions</methodName>
      <methodSignature>interactions(Illuminate\Http\Request $request): Illuminate\Http\JsonResponse</methodSignature>
      <fullMethod>interactions(Illuminate\Http\Request $request): Illuminate\Http\JsonResponse</fullMethod>
      <crap>3.05</crap>
      <complexity>3</complexity>
      <coverage>81.82</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\ProfileController</className>
      <methodName>update</methodName>
      <methodSignature>update(App\Http\Requests\ProfileUpdateRequest $request, string $id)</methodSignature>
      <fullMethod>update(App\Http\Requests\ProfileUpdateRequest $request, string $id)</fullMethod>
      <crap>14.16</crap>
      <complexity>8</complexity>
      <coverage>54.17</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\ProfileController</className>
      <methodName>destroy</methodName>
      <methodSignature>destroy()</methodSignature>
      <fullMethod>destroy()</fullMethod>
      <crap>6.19</crap>
      <complexity>6</complexity>
      <coverage>82.61</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\ReportController</className>
      <methodName>index</methodName>
      <methodSignature>index(Illuminate\Http\Request $request)</methodSignature>
      <fullMethod>index(Illuminate\Http\Request $request)</fullMethod>
      <crap>42</crap>
      <complexity>6</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\ReportController</className>
      <methodName>store</methodName>
      <methodSignature>store(App\Http\Requests\ReportRequest $request)</methodSignature>
      <fullMethod>store(App\Http\Requests\ReportRequest $request)</fullMethod>
      <crap>8</crap>
      <complexity>8</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\ReportController</className>
      <methodName>show</methodName>
      <methodSignature>show($zoneId)</methodSignature>
      <fullMethod>show($zoneId)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\ReportController</className>
      <methodName>update</methodName>
      <methodSignature>update(App\Http\Requests\ReportRequest $request, App\Models\Report $report)</methodSignature>
      <fullMethod>update(App\Http\Requests\ReportRequest $request, App\Models\Report $report)</fullMethod>
      <crap>10</crap>
      <complexity>10</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\ReportController</className>
      <methodName>destroy</methodName>
      <methodSignature>destroy(App\Models\Report $report)</methodSignature>
      <fullMethod>destroy(App\Models\Report $report)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\SectorController</className>
      <methodName>index</methodName>
      <methodSignature>index(Illuminate\Http\Request $request): Illuminate\Http\JsonResponse</methodSignature>
      <fullMethod>index(Illuminate\Http\Request $request): Illuminate\Http\JsonResponse</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\SectorController</className>
      <methodName>show</methodName>
      <methodSignature>show($id): Illuminate\Http\JsonResponse</methodSignature>
      <fullMethod>show($id): Illuminate\Http\JsonResponse</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\SubscriptionController</className>
      <methodName>index</methodName>
      <methodSignature>index()</methodSignature>
      <fullMethod>index()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\SubscriptionController</className>
      <methodName>store</methodName>
      <methodSignature>store(App\Http\Requests\SubscriptionRequest $request)</methodSignature>
      <fullMethod>store(App\Http\Requests\SubscriptionRequest $request)</fullMethod>
      <crap>5.01</crap>
      <complexity>5</complexity>
      <coverage>93.88</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\SubscriptionController</className>
      <methodName>currentSubscription</methodName>
      <methodSignature>currentSubscription()</methodSignature>
      <fullMethod>currentSubscription()</fullMethod>
      <crap>2.19</crap>
      <complexity>2</complexity>
      <coverage>63.64</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\SubscriptionController</className>
      <methodName>edit</methodName>
      <methodSignature>edit(string $id)</methodSignature>
      <fullMethod>edit(string $id)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\SubscriptionController</className>
      <methodName>update</methodName>
      <methodSignature>update(App\Http\Requests\SubscriptionRequest $request, App\Models\Subscription $subscription)</methodSignature>
      <fullMethod>update(App\Http\Requests\SubscriptionRequest $request, App\Models\Subscription $subscription)</fullMethod>
      <crap>6.25</crap>
      <complexity>5</complexity>
      <coverage>63.16</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\SubscriptionController</className>
      <methodName>cancel</methodName>
      <methodSignature>cancel(Illuminate\Http\Request $request, App\Models\Subscription $subscription)</methodSignature>
      <fullMethod>cancel(Illuminate\Http\Request $request, App\Models\Subscription $subscription)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>91.67</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\SubscriptionController</className>
      <methodName>renew</methodName>
      <methodSignature>renew(App\Http\Requests\SubscriptionRequest $request, App\Models\Subscription $subscription)</methodSignature>
      <fullMethod>renew(App\Http\Requests\SubscriptionRequest $request, App\Models\Subscription $subscription)</fullMethod>
      <crap>4.15</crap>
      <complexity>4</complexity>
      <coverage>78.95</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\SubscriptionController</className>
      <methodName>history</methodName>
      <methodSignature>history()</methodSignature>
      <fullMethod>history()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\SubscriptionController</className>
      <methodName>destroy</methodName>
      <methodSignature>destroy(string $id)</methodSignature>
      <fullMethod>destroy(string $id)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\SubscriptionController</className>
      <methodName>generateUniqueTransactionId</methodName>
      <methodSignature>generateUniqueTransactionId()</methodSignature>
      <fullMethod>generateUniqueTransactionId()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\SubscriptionController</className>
      <methodName>isEligibleForRenewal</methodName>
      <methodSignature>isEligibleForRenewal(App\Models\Subscription $subscription): bool</methodSignature>
      <fullMethod>isEligibleForRenewal(App\Models\Subscription $subscription): bool</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\WeatherController</className>
      <methodName>getWeatherData</methodName>
      <methodSignature>getWeatherData(Illuminate\Http\Request $request)</methodSignature>
      <fullMethod>getWeatherData(Illuminate\Http\Request $request)</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\WeatherController</className>
      <methodName>processData</methodName>
      <methodSignature>processData(Illuminate\Http\Request $request)</methodSignature>
      <fullMethod>processData(Illuminate\Http\Request $request)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\WeatherPredictionController</className>
      <methodName>index</methodName>
      <methodSignature>index(Illuminate\Http\Request $request)</methodSignature>
      <fullMethod>index(Illuminate\Http\Request $request)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\ZoneController</className>
      <methodName>index</methodName>
      <methodSignature>index(Illuminate\Http\Request $request): Illuminate\Http\JsonResponse</methodSignature>
      <fullMethod>index(Illuminate\Http\Request $request): Illuminate\Http\JsonResponse</fullMethod>
      <crap>10.89</crap>
      <complexity>9</complexity>
      <coverage>71.43</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\ZoneController</className>
      <methodName>show</methodName>
      <methodSignature>show($id): Illuminate\Http\JsonResponse</methodSignature>
      <fullMethod>show($id): Illuminate\Http\JsonResponse</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\ZoneController</className>
      <methodName>store</methodName>
      <methodSignature>store(App\Http\Requests\ZoneRequest $request): Illuminate\Http\JsonResponse</methodSignature>
      <fullMethod>store(App\Http\Requests\ZoneRequest $request): Illuminate\Http\JsonResponse</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\ZoneController</className>
      <methodName>update</methodName>
      <methodSignature>update(App\Http\Requests\ZoneRequest $request, int $id): Illuminate\Http\JsonResponse</methodSignature>
      <fullMethod>update(App\Http\Requests\ZoneRequest $request, int $id): Illuminate\Http\JsonResponse</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Api</package>
      <className>App\Http\Controllers\Api\ZoneController</className>
      <methodName>destroy</methodName>
      <methodSignature>destroy(int $id): Illuminate\Http\JsonResponse</methodSignature>
      <fullMethod>destroy(int $id): Illuminate\Http\JsonResponse</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Auth</package>
      <className>App\Http\Controllers\Auth\AuthenticatedSessionController</className>
      <methodName>create</methodName>
      <methodSignature>create(): Illuminate\View\View</methodSignature>
      <fullMethod>create(): Illuminate\View\View</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Auth</package>
      <className>App\Http\Controllers\Auth\AuthenticatedSessionController</className>
      <methodName>store</methodName>
      <methodSignature>store(App\Http\Requests\Auth\LoginRequest $request): Illuminate\Http\RedirectResponse</methodSignature>
      <fullMethod>store(App\Http\Requests\Auth\LoginRequest $request): Illuminate\Http\RedirectResponse</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Auth</package>
      <className>App\Http\Controllers\Auth\AuthenticatedSessionController</className>
      <methodName>getTokenFromSession</methodName>
      <methodSignature>getTokenFromSession(Illuminate\Http\Request $request)</methodSignature>
      <fullMethod>getTokenFromSession(Illuminate\Http\Request $request)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Auth</package>
      <className>App\Http\Controllers\Auth\AuthenticatedSessionController</className>
      <methodName>destroy</methodName>
      <methodSignature>destroy(Illuminate\Http\Request $request): Illuminate\Http\RedirectResponse</methodSignature>
      <fullMethod>destroy(Illuminate\Http\Request $request): Illuminate\Http\RedirectResponse</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Auth</package>
      <className>App\Http\Controllers\Auth\ConfirmablePasswordController</className>
      <methodName>show</methodName>
      <methodSignature>show(): Illuminate\View\View</methodSignature>
      <fullMethod>show(): Illuminate\View\View</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Auth</package>
      <className>App\Http\Controllers\Auth\ConfirmablePasswordController</className>
      <methodName>store</methodName>
      <methodSignature>store(Illuminate\Http\Request $request): Illuminate\Http\RedirectResponse</methodSignature>
      <fullMethod>store(Illuminate\Http\Request $request): Illuminate\Http\RedirectResponse</fullMethod>
      <crap>2.15</crap>
      <complexity>2</complexity>
      <coverage>66.67</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Auth</package>
      <className>App\Http\Controllers\Auth\EmailVerificationNotificationController</className>
      <methodName>store</methodName>
      <methodSignature>store(Illuminate\Http\Request $request): Illuminate\Http\RedirectResponse</methodSignature>
      <fullMethod>store(Illuminate\Http\Request $request): Illuminate\Http\RedirectResponse</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Auth</package>
      <className>App\Http\Controllers\Auth\EmailVerificationPromptController</className>
      <methodName>__invoke</methodName>
      <methodSignature>__invoke(Illuminate\Http\Request $request): \Illuminate\Http\RedirectResponse|\Illuminate\View\View</methodSignature>
      <fullMethod>__invoke(Illuminate\Http\Request $request): \Illuminate\Http\RedirectResponse|\Illuminate\View\View</fullMethod>
      <crap>2.15</crap>
      <complexity>2</complexity>
      <coverage>66.67</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Auth</package>
      <className>App\Http\Controllers\Auth\NewPasswordController</className>
      <methodName>create</methodName>
      <methodSignature>create(Illuminate\Http\Request $request): Illuminate\View\View</methodSignature>
      <fullMethod>create(Illuminate\Http\Request $request): Illuminate\View\View</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Auth</package>
      <className>App\Http\Controllers\Auth\NewPasswordController</className>
      <methodName>store</methodName>
      <methodSignature>store(Illuminate\Http\Request $request): Illuminate\Http\RedirectResponse</methodSignature>
      <fullMethod>store(Illuminate\Http\Request $request): Illuminate\Http\RedirectResponse</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Auth</package>
      <className>App\Http\Controllers\Auth\PasswordController</className>
      <methodName>update</methodName>
      <methodSignature>update(Illuminate\Http\Request $request): Illuminate\Http\RedirectResponse</methodSignature>
      <fullMethod>update(Illuminate\Http\Request $request): Illuminate\Http\RedirectResponse</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Auth</package>
      <className>App\Http\Controllers\Auth\PasswordResetLinkController</className>
      <methodName>create</methodName>
      <methodSignature>create(): Illuminate\View\View</methodSignature>
      <fullMethod>create(): Illuminate\View\View</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Auth</package>
      <className>App\Http\Controllers\Auth\PasswordResetLinkController</className>
      <methodName>store</methodName>
      <methodSignature>store(Illuminate\Http\Request $request): Illuminate\Http\RedirectResponse</methodSignature>
      <fullMethod>store(Illuminate\Http\Request $request): Illuminate\Http\RedirectResponse</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers\Auth</package>
      <className>App\Http\Controllers\Auth\VerifyEmailController</className>
      <methodName>__invoke</methodName>
      <methodSignature>__invoke(Illuminate\Foundation\Auth\EmailVerificationRequest $request): Illuminate\Http\RedirectResponse</methodSignature>
      <fullMethod>__invoke(Illuminate\Foundation\Auth\EmailVerificationRequest $request): Illuminate\Http\RedirectResponse</fullMethod>
      <crap>3.07</crap>
      <complexity>3</complexity>
      <coverage>80</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\CompanyController</className>
      <methodName>index</methodName>
      <methodSignature>index()</methodSignature>
      <fullMethod>index()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\CompanyController</className>
      <methodName>show</methodName>
      <methodSignature>show(App\Models\Company $company)</methodSignature>
      <fullMethod>show(App\Models\Company $company)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\CompanyController</className>
      <methodName>destroy</methodName>
      <methodSignature>destroy($id)</methodSignature>
      <fullMethod>destroy($id)</fullMethod>
      <crap>4.18</crap>
      <complexity>4</complexity>
      <coverage>77.78</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\DashboardController</className>
      <methodName>dashboard</methodName>
      <methodSignature>dashboard()</methodSignature>
      <fullMethod>dashboard()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\DisasterController</className>
      <methodName>index</methodName>
      <methodSignature>index()</methodSignature>
      <fullMethod>index()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\DisasterController</className>
      <methodName>create</methodName>
      <methodSignature>create()</methodSignature>
      <fullMethod>create()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\DisasterController</className>
      <methodName>store</methodName>
      <methodSignature>store(App\Http\Requests\DisasterRequest $request)</methodSignature>
      <fullMethod>store(App\Http\Requests\DisasterRequest $request)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\DisasterController</className>
      <methodName>show</methodName>
      <methodSignature>show(App\Models\Disaster $disaster)</methodSignature>
      <fullMethod>show(App\Models\Disaster $disaster)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\DisasterController</className>
      <methodName>edit</methodName>
      <methodSignature>edit(App\Models\Disaster $disaster)</methodSignature>
      <fullMethod>edit(App\Models\Disaster $disaster)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\DisasterController</className>
      <methodName>update</methodName>
      <methodSignature>update(App\Http\Requests\DisasterRequest $request, App\Models\Disaster $disaster)</methodSignature>
      <fullMethod>update(App\Http\Requests\DisasterRequest $request, App\Models\Disaster $disaster)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\DisasterController</className>
      <methodName>destroy</methodName>
      <methodSignature>destroy(App\Models\Disaster $disaster)</methodSignature>
      <fullMethod>destroy(App\Models\Disaster $disaster)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\EventController</className>
      <methodName>index</methodName>
      <methodSignature>index(Illuminate\Http\Request $request)</methodSignature>
      <fullMethod>index(Illuminate\Http\Request $request)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\EventController</className>
      <methodName>destroy</methodName>
      <methodSignature>destroy(App\Models\Event $event)</methodSignature>
      <fullMethod>destroy(App\Models\Event $event)</fullMethod>
      <crap>2.03</crap>
      <complexity>2</complexity>
      <coverage>80</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\FeedbackController</className>
      <methodName>index</methodName>
      <methodSignature>index()</methodSignature>
      <fullMethod>index()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\FeedbackController</className>
      <methodName>show</methodName>
      <methodSignature>show(App\Models\Feedback $feedback)</methodSignature>
      <fullMethod>show(App\Models\Feedback $feedback)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\FeedbackController</className>
      <methodName>destroy</methodName>
      <methodSignature>destroy(App\Models\Feedback $feedback)</methodSignature>
      <fullMethod>destroy(App\Models\Feedback $feedback)</fullMethod>
      <crap>2.03</crap>
      <complexity>2</complexity>
      <coverage>80</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\PermissionController</className>
      <methodName>getAllRolesWithPermissions</methodName>
      <methodSignature>getAllRolesWithPermissions()</methodSignature>
      <fullMethod>getAllRolesWithPermissions()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\PermissionController</className>
      <methodName>store</methodName>
      <methodSignature>store(Illuminate\Http\Request $request)</methodSignature>
      <fullMethod>store(Illuminate\Http\Request $request)</fullMethod>
      <crap>4.04</crap>
      <complexity>4</complexity>
      <coverage>86.67</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\PermissionController</className>
      <methodName>update</methodName>
      <methodSignature>update(Illuminate\Http\Request $request, $id)</methodSignature>
      <fullMethod>update(Illuminate\Http\Request $request, $id)</fullMethod>
      <crap>4.04</crap>
      <complexity>4</complexity>
      <coverage>86.67</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\PermissionController</className>
      <methodName>getAllUsersWithRolesAndPermissions</methodName>
      <methodSignature>getAllUsersWithRolesAndPermissions()</methodSignature>
      <fullMethod>getAllUsersWithRolesAndPermissions()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\PermissionController</className>
      <methodName>showRole</methodName>
      <methodSignature>showRole($id)</methodSignature>
      <fullMethod>showRole($id)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\PermissionController</className>
      <methodName>updatePermissions</methodName>
      <methodSignature>updatePermissions(Illuminate\Http\Request $request, $id)</methodSignature>
      <fullMethod>updatePermissions(Illuminate\Http\Request $request, $id)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\PermissionController</className>
      <methodName>storePermission</methodName>
      <methodSignature>storePermission(Illuminate\Http\Request $request)</methodSignature>
      <fullMethod>storePermission(Illuminate\Http\Request $request)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\PermissionController</className>
      <methodName>getAllPermissions</methodName>
      <methodSignature>getAllPermissions()</methodSignature>
      <fullMethod>getAllPermissions()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\PermissionController</className>
      <methodName>updateUniqPermission</methodName>
      <methodSignature>updateUniqPermission(Illuminate\Http\Request $request, $id)</methodSignature>
      <fullMethod>updateUniqPermission(Illuminate\Http\Request $request, $id)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\PermissionController</className>
      <methodName>deletePermission</methodName>
      <methodSignature>deletePermission($id)</methodSignature>
      <fullMethod>deletePermission($id)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\PostController</className>
      <methodName>index</methodName>
      <methodSignature>index()</methodSignature>
      <fullMethod>index()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\PostController</className>
      <methodName>create</methodName>
      <methodSignature>create()</methodSignature>
      <fullMethod>create()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\PostController</className>
      <methodName>store</methodName>
      <methodSignature>store(App\Http\Requests\PostRequest $request)</methodSignature>
      <fullMethod>store(App\Http\Requests\PostRequest $request)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\PostController</className>
      <methodName>show</methodName>
      <methodSignature>show(string $id)</methodSignature>
      <fullMethod>show(string $id)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\PostController</className>
      <methodName>edit</methodName>
      <methodSignature>edit(string $id)</methodSignature>
      <fullMethod>edit(string $id)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\PostController</className>
      <methodName>update</methodName>
      <methodSignature>update(Illuminate\Http\Request $request, string $id)</methodSignature>
      <fullMethod>update(Illuminate\Http\Request $request, string $id)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\PostController</className>
      <methodName>destroy</methodName>
      <methodSignature>destroy(string $id)</methodSignature>
      <fullMethod>destroy(string $id)</fullMethod>
      <crap>6.2</crap>
      <complexity>6</complexity>
      <coverage>82.35</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\PostController</className>
      <methodName>allowPost</methodName>
      <methodSignature>allowPost($id)</methodSignature>
      <fullMethod>allowPost($id)</fullMethod>
      <crap>3.02</crap>
      <complexity>3</complexity>
      <coverage>87.5</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ProfileController</className>
      <methodName>edit</methodName>
      <methodSignature>edit(Illuminate\Http\Request $request): Illuminate\View\View</methodSignature>
      <fullMethod>edit(Illuminate\Http\Request $request): Illuminate\View\View</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ProfileController</className>
      <methodName>update</methodName>
      <methodSignature>update(App\Http\Requests\ProfileUpdateRequest $request): Illuminate\Http\RedirectResponse</methodSignature>
      <fullMethod>update(App\Http\Requests\ProfileUpdateRequest $request): Illuminate\Http\RedirectResponse</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ProfileController</className>
      <methodName>destroy</methodName>
      <methodSignature>destroy(Illuminate\Http\Request $request): Illuminate\Http\RedirectResponse</methodSignature>
      <fullMethod>destroy(Illuminate\Http\Request $request): Illuminate\Http\RedirectResponse</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ReportController</className>
      <methodName>index</methodName>
      <methodSignature>index(Illuminate\Http\Request $request)</methodSignature>
      <fullMethod>index(Illuminate\Http\Request $request)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ReportController</className>
      <methodName>createResourceCompletion</methodName>
      <methodSignature>createResourceCompletion()</methodSignature>
      <fullMethod>createResourceCompletion()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ReportController</className>
      <methodName>createFishingVulnerability</methodName>
      <methodSignature>createFishingVulnerability()</methodSignature>
      <fullMethod>createFishingVulnerability()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ReportController</className>
      <methodName>createWaterStress</methodName>
      <methodSignature>createWaterStress()</methodSignature>
      <fullMethod>createWaterStress()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ReportController</className>
      <methodName>createMigration</methodName>
      <methodSignature>createMigration()</methodSignature>
      <fullMethod>createMigration()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ReportController</className>
      <methodName>createHealth</methodName>
      <methodSignature>createHealth()</methodSignature>
      <fullMethod>createHealth()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ReportController</className>
      <methodName>createAgriculture</methodName>
      <methodSignature>createAgriculture()</methodSignature>
      <fullMethod>createAgriculture()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ReportController</className>
      <methodName>createInfrastructure</methodName>
      <methodSignature>createInfrastructure()</methodSignature>
      <fullMethod>createInfrastructure()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ReportController</className>
      <methodName>createSocial</methodName>
      <methodSignature>createSocial()</methodSignature>
      <fullMethod>createSocial()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ReportController</className>
      <methodName>createSelectSecurity</methodName>
      <methodSignature>createSelectSecurity()</methodSignature>
      <fullMethod>createSelectSecurity()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ReportController</className>
      <methodName>store</methodName>
      <methodSignature>store(App\Http\Requests\ReportRequest $request)</methodSignature>
      <fullMethod>store(App\Http\Requests\ReportRequest $request)</fullMethod>
      <crap>8.2</crap>
      <complexity>8</complexity>
      <coverage>85.37</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ReportController</className>
      <methodName>destroy</methodName>
      <methodSignature>destroy($id)</methodSignature>
      <fullMethod>destroy($id)</fullMethod>
      <crap>2.03</crap>
      <complexity>2</complexity>
      <coverage>80</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\SectorController</className>
      <methodName>index</methodName>
      <methodSignature>index()</methodSignature>
      <fullMethod>index()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\SectorController</className>
      <methodName>create</methodName>
      <methodSignature>create()</methodSignature>
      <fullMethod>create()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\SectorController</className>
      <methodName>store</methodName>
      <methodSignature>store(Illuminate\Http\Request $request)</methodSignature>
      <fullMethod>store(Illuminate\Http\Request $request)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\SectorController</className>
      <methodName>show</methodName>
      <methodSignature>show(App\Models\Sector $sector)</methodSignature>
      <fullMethod>show(App\Models\Sector $sector)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\SectorController</className>
      <methodName>edit</methodName>
      <methodSignature>edit(string $id)</methodSignature>
      <fullMethod>edit(string $id)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\SectorController</className>
      <methodName>update</methodName>
      <methodSignature>update(Illuminate\Http\Request $request, App\Models\Sector $sector)</methodSignature>
      <fullMethod>update(Illuminate\Http\Request $request, App\Models\Sector $sector)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\SectorController</className>
      <methodName>destroy</methodName>
      <methodSignature>destroy(App\Models\Sector $sector)</methodSignature>
      <fullMethod>destroy(App\Models\Sector $sector)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\UserController</className>
      <methodName>index</methodName>
      <methodSignature>index()</methodSignature>
      <fullMethod>index()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\UserController</className>
      <methodName>getUserCouncil</methodName>
      <methodSignature>getUserCouncil()</methodSignature>
      <fullMethod>getUserCouncil()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\UserController</className>
      <methodName>validateInstitution</methodName>
      <methodSignature>validateInstitution($userId)</methodSignature>
      <fullMethod>validateInstitution($userId)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\UserController</className>
      <methodName>create</methodName>
      <methodSignature>create()</methodSignature>
      <fullMethod>create()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\UserController</className>
      <methodName>store</methodName>
      <methodSignature>store(App\Http\Requests\UserRequest $request)</methodSignature>
      <fullMethod>store(App\Http\Requests\UserRequest $request)</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\UserController</className>
      <methodName>show</methodName>
      <methodSignature>show($id)</methodSignature>
      <fullMethod>show($id)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\UserController</className>
      <methodName>edit</methodName>
      <methodSignature>edit(string $id)</methodSignature>
      <fullMethod>edit(string $id)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\UserController</className>
      <methodName>update</methodName>
      <methodSignature>update(App\Http\Requests\UserRequest $request, string $id)</methodSignature>
      <fullMethod>update(App\Http\Requests\UserRequest $request, string $id)</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\UserController</className>
      <methodName>destroy</methodName>
      <methodSignature>destroy($id)</methodSignature>
      <fullMethod>destroy($id)</fullMethod>
      <crap>6.22</crap>
      <complexity>6</complexity>
      <coverage>81.82</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\UserController</className>
      <methodName>banUser</methodName>
      <methodSignature>banUser($id)</methodSignature>
      <fullMethod>banUser($id)</fullMethod>
      <crap>3.07</crap>
      <complexity>3</complexity>
      <coverage>80</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\UserController</className>
      <methodName>activeUser</methodName>
      <methodSignature>activeUser($id)</methodSignature>
      <fullMethod>activeUser($id)</fullMethod>
      <crap>3.07</crap>
      <complexity>3</complexity>
      <coverage>80</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ZoneController</className>
      <methodName>index</methodName>
      <methodSignature>index(Illuminate\Http\Request $request)</methodSignature>
      <fullMethod>index(Illuminate\Http\Request $request)</fullMethod>
      <crap>4.13</crap>
      <complexity>4</complexity>
      <coverage>80</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ZoneController</className>
      <methodName>divisions</methodName>
      <methodSignature>divisions(Illuminate\Http\Request $request, $id)</methodSignature>
      <fullMethod>divisions(Illuminate\Http\Request $request, $id)</fullMethod>
      <crap>4.2</crap>
      <complexity>4</complexity>
      <coverage>76.92</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ZoneController</className>
      <methodName>subdivisions</methodName>
      <methodSignature>subdivisions(Illuminate\Http\Request $request, $id)</methodSignature>
      <fullMethod>subdivisions(Illuminate\Http\Request $request, $id)</fullMethod>
      <crap>4.2</crap>
      <complexity>4</complexity>
      <coverage>76.92</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ZoneController</className>
      <methodName>show</methodName>
      <methodSignature>show($id)</methodSignature>
      <fullMethod>show($id)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ZoneController</className>
      <methodName>store</methodName>
      <methodSignature>store(App\Http\Requests\ZoneRequest $request)</methodSignature>
      <fullMethod>store(App\Http\Requests\ZoneRequest $request)</fullMethod>
      <crap>37.29</crap>
      <complexity>12</complexity>
      <coverage>44</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ZoneController</className>
      <methodName>update</methodName>
      <methodSignature>update(App\Http\Requests\ZoneRequest $request, int $id)</methodSignature>
      <fullMethod>update(App\Http\Requests\ZoneRequest $request, int $id)</fullMethod>
      <crap>138.52</crap>
      <complexity>20</complexity>
      <coverage>33.33</coverage>
      <crapLoad>14</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ZoneController</className>
      <methodName>destroy</methodName>
      <methodSignature>destroy($id)</methodSignature>
      <fullMethod>destroy($id)</fullMethod>
      <crap>2.03</crap>
      <complexity>2</complexity>
      <coverage>80</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ZoneController</className>
      <methodName>create</methodName>
      <methodSignature>create()</methodSignature>
      <fullMethod>create()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Controllers</package>
      <className>App\Http\Controllers\ZoneController</className>
      <methodName>edit</methodName>
      <methodSignature>edit($id)</methodSignature>
      <fullMethod>edit($id)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Middleware</package>
      <className>App\Http\Middleware\Authenticate</className>
      <methodName>redirectTo</methodName>
      <methodSignature>redirectTo(Illuminate\Http\Request $request): ?string</methodSignature>
      <fullMethod>redirectTo(Illuminate\Http\Request $request): ?string</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Middleware</package>
      <className>App\Http\Middleware\RedirectIfAuthenticated</className>
      <methodName>handle</methodName>
      <methodSignature>handle(Illuminate\Http\Request $request, Closure $next, string $guards): Symfony\Component\HttpFoundation\Response</methodSignature>
      <fullMethod>handle(Illuminate\Http\Request $request, Closure $next, string $guards): Symfony\Component\HttpFoundation\Response</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Middleware</package>
      <className>App\Http\Middleware\TrustHosts</className>
      <methodName>hosts</methodName>
      <methodSignature>hosts(): array</methodSignature>
      <fullMethod>hosts(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests\Auth</package>
      <className>App\Http\Requests\Auth\ForgotPasswordRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize()</methodSignature>
      <fullMethod>authorize()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests\Auth</package>
      <className>App\Http\Requests\Auth\ForgotPasswordRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules()</methodSignature>
      <fullMethod>rules()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests\Auth</package>
      <className>App\Http\Requests\Auth\ForgotPasswordRequest</className>
      <methodName>failedValidation</methodName>
      <methodSignature>failedValidation(Illuminate\Contracts\Validation\Validator $validator)</methodSignature>
      <fullMethod>failedValidation(Illuminate\Contracts\Validation\Validator $validator)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests\Auth</package>
      <className>App\Http\Requests\Auth\LoginRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize(): bool</methodSignature>
      <fullMethod>authorize(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests\Auth</package>
      <className>App\Http\Requests\Auth\LoginRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests\Auth</package>
      <className>App\Http\Requests\Auth\LoginRequest</className>
      <methodName>authenticate</methodName>
      <methodSignature>authenticate(): void</methodSignature>
      <fullMethod>authenticate(): void</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests\Auth</package>
      <className>App\Http\Requests\Auth\LoginRequest</className>
      <methodName>ensureIsNotRateLimited</methodName>
      <methodSignature>ensureIsNotRateLimited(): void</methodSignature>
      <fullMethod>ensureIsNotRateLimited(): void</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests\Auth</package>
      <className>App\Http\Requests\Auth\LoginRequest</className>
      <methodName>throttleKey</methodName>
      <methodSignature>throttleKey(): string</methodSignature>
      <fullMethod>throttleKey(): string</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests\Auth</package>
      <className>App\Http\Requests\Auth\RegisterRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize()</methodSignature>
      <fullMethod>authorize()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests\Auth</package>
      <className>App\Http\Requests\Auth\RegisterRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules()</methodSignature>
      <fullMethod>rules()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests\Auth</package>
      <className>App\Http\Requests\Auth\RegisterRequest</className>
      <methodName>failedValidation</methodName>
      <methodSignature>failedValidation(Illuminate\Contracts\Validation\Validator $validator)</methodSignature>
      <fullMethod>failedValidation(Illuminate\Contracts\Validation\Validator $validator)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests\Auth</package>
      <className>App\Http\Requests\Auth\ResetPasswordRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize()</methodSignature>
      <fullMethod>authorize()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests\Auth</package>
      <className>App\Http\Requests\Auth\ResetPasswordRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules()</methodSignature>
      <fullMethod>rules()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests\Auth</package>
      <className>App\Http\Requests\Auth\ResetPasswordRequest</className>
      <methodName>failedValidation</methodName>
      <methodSignature>failedValidation(Illuminate\Contracts\Validation\Validator $validator)</methodSignature>
      <fullMethod>failedValidation(Illuminate\Contracts\Validation\Validator $validator)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests\Auth</package>
      <className>App\Http\Requests\Auth\UpdatePasswordRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize()</methodSignature>
      <fullMethod>authorize()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests\Auth</package>
      <className>App\Http\Requests\Auth\UpdatePasswordRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules()</methodSignature>
      <fullMethod>rules()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\CompanyRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize(): bool</methodSignature>
      <fullMethod>authorize(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\CompanyRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\DisasterRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize(): bool</methodSignature>
      <fullMethod>authorize(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\DisasterRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\DisasterRequest</className>
      <methodName>failedValidation</methodName>
      <methodSignature>failedValidation(Illuminate\Contracts\Validation\Validator $validator)</methodSignature>
      <fullMethod>failedValidation(Illuminate\Contracts\Validation\Validator $validator)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\EventRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize()</methodSignature>
      <fullMethod>authorize()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\EventRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules()</methodSignature>
      <fullMethod>rules()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\FeedbackRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize(): bool</methodSignature>
      <fullMethod>authorize(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\FeedbackRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\NotificationRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize(): bool</methodSignature>
      <fullMethod>authorize(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\NotificationRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\NotificationRequest</className>
      <methodName>messages</methodName>
      <methodSignature>messages()</methodSignature>
      <fullMethod>messages()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\PackageRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize(): bool</methodSignature>
      <fullMethod>authorize(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\PackageRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\PackageRequest</className>
      <methodName>messages</methodName>
      <methodSignature>messages(): array</methodSignature>
      <fullMethod>messages(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\PostRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize(): bool</methodSignature>
      <fullMethod>authorize(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\PostRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\PostRequest</className>
      <methodName>failedValidation</methodName>
      <methodSignature>failedValidation(Illuminate\Contracts\Validation\Validator $validator)</methodSignature>
      <fullMethod>failedValidation(Illuminate\Contracts\Validation\Validator $validator)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\PostRequest</className>
      <methodName>bodyParameters</methodName>
      <methodSignature>bodyParameters()</methodSignature>
      <fullMethod>bodyParameters()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\ProfileUpdateRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\ProfileUpdateRequest</className>
      <methodName>failedValidation</methodName>
      <methodSignature>failedValidation(Illuminate\Contracts\Validation\Validator $validator)</methodSignature>
      <fullMethod>failedValidation(Illuminate\Contracts\Validation\Validator $validator)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\ReportRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize(): bool</methodSignature>
      <fullMethod>authorize(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\ReportRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\ReportRequest</className>
      <methodName>messages</methodName>
      <methodSignature>messages()</methodSignature>
      <fullMethod>messages()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\StorePackageRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize(): bool</methodSignature>
      <fullMethod>authorize(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\StorePackageRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\SubscriptionRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize(): bool</methodSignature>
      <fullMethod>authorize(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\SubscriptionRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\SubscriptionRequest</className>
      <methodName>messages</methodName>
      <methodSignature>messages(): array</methodSignature>
      <fullMethod>messages(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\UserRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize(): bool</methodSignature>
      <fullMethod>authorize(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\UserRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\UserRequest</className>
      <methodName>bodyParameters</methodName>
      <methodSignature>bodyParameters()</methodSignature>
      <fullMethod>bodyParameters()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\UserRequest</className>
      <methodName>failedValidation</methodName>
      <methodSignature>failedValidation(Illuminate\Contracts\Validation\Validator $validator)</methodSignature>
      <fullMethod>failedValidation(Illuminate\Contracts\Validation\Validator $validator)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\ZoneRequest</className>
      <methodName>authorize</methodName>
      <methodSignature>authorize(): bool</methodSignature>
      <fullMethod>authorize(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\ZoneRequest</className>
      <methodName>rules</methodName>
      <methodSignature>rules(): array</methodSignature>
      <fullMethod>rules(): array</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Requests</package>
      <className>App\Http\Requests\ZoneRequest</className>
      <methodName>failedValidation</methodName>
      <methodSignature>failedValidation(Illuminate\Contracts\Validation\Validator $validator)</methodSignature>
      <fullMethod>failedValidation(Illuminate\Contracts\Validation\Validator $validator)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Resources</package>
      <className>App\Http\Resources\CommentResource</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>toArray(Illuminate\Http\Request $request): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Resources</package>
      <className>App\Http\Resources\CompanyResource</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>toArray(Illuminate\Http\Request $request): array</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Resources</package>
      <className>App\Http\Resources\DisasterResource</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>toArray(Illuminate\Http\Request $request): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Resources</package>
      <className>App\Http\Resources\EventResource</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray($request)</methodSignature>
      <fullMethod>toArray($request)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Resources</package>
      <className>App\Http\Resources\FeedbackResource</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>toArray(Illuminate\Http\Request $request): array</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Resources</package>
      <className>App\Http\Resources\ImageResource</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>toArray(Illuminate\Http\Request $request): array</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Resources</package>
      <className>App\Http\Resources\InteractionResource</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>toArray(Illuminate\Http\Request $request): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Resources</package>
      <className>App\Http\Resources\PackageResource</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>toArray(Illuminate\Http\Request $request): array</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Resources</package>
      <className>App\Http\Resources\PaymentResource</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>toArray(Illuminate\Http\Request $request): array</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Resources</package>
      <className>App\Http\Resources\PostResource</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>toArray(Illuminate\Http\Request $request): array</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Resources</package>
      <className>App\Http\Resources\ReportResource</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>toArray(Illuminate\Http\Request $request): array</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Resources</package>
      <className>App\Http\Resources\SectorFullResource</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>toArray(Illuminate\Http\Request $request): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Resources</package>
      <className>App\Http\Resources\SectorResource</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>toArray(Illuminate\Http\Request $request): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Resources</package>
      <className>App\Http\Resources\SubscriptionResource</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>toArray(Illuminate\Http\Request $request): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Resources</package>
      <className>App\Http\Resources\SubscriptionResource</className>
      <methodName>calculateDuration</methodName>
      <methodSignature>calculateDuration(): int</methodSignature>
      <fullMethod>calculateDuration(): int</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Resources</package>
      <className>App\Http\Resources\SubscriptionResource</className>
      <methodName>isActive</methodName>
      <methodSignature>isActive(): bool</methodSignature>
      <fullMethod>isActive(): bool</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Resources</package>
      <className>App\Http\Resources\SubscriptionResource</className>
      <methodName>calculateDaysRemaining</methodName>
      <methodSignature>calculateDaysRemaining(): ?int</methodSignature>
      <fullMethod>calculateDaysRemaining(): ?int</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Resources</package>
      <className>App\Http\Resources\TopicResource</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>toArray(Illuminate\Http\Request $request): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Resources</package>
      <className>App\Http\Resources\UserFullResource</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>toArray(Illuminate\Http\Request $request): array</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Resources</package>
      <className>App\Http\Resources\UserResource</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray($request)</methodSignature>
      <fullMethod>toArray($request)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Resources</package>
      <className>App\Http\Resources\VectorKeyResource</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray($request)</methodSignature>
      <fullMethod>toArray($request)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Resources</package>
      <className>App\Http\Resources\VectorResource</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray($request)</methodSignature>
      <fullMethod>toArray($request)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Http\Resources</package>
      <className>App\Http\Resources\ZoneResource</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray(Illuminate\Http\Request $request): array</methodSignature>
      <fullMethod>toArray(Illuminate\Http\Request $request): array</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Mail</package>
      <className>App\Mail\CompanyCreated</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(App\Models\Company $company)</methodSignature>
      <fullMethod>__construct(App\Models\Company $company)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Mail</package>
      <className>App\Mail\CompanyCreated</className>
      <methodName>envelope</methodName>
      <methodSignature>envelope(): Illuminate\Mail\Mailables\Envelope</methodSignature>
      <fullMethod>envelope(): Illuminate\Mail\Mailables\Envelope</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Mail</package>
      <className>App\Mail\CompanyCreated</className>
      <methodName>content</methodName>
      <methodSignature>content(): Illuminate\Mail\Mailables\Content</methodSignature>
      <fullMethod>content(): Illuminate\Mail\Mailables\Content</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Mail</package>
      <className>App\Mail\CompanyCreated</className>
      <methodName>attachments</methodName>
      <methodSignature>attachments(): array</methodSignature>
      <fullMethod>attachments(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Mail</package>
      <className>App\Mail\DailyPostsMail</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($posts)</methodSignature>
      <fullMethod>__construct($posts)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Mail</package>
      <className>App\Mail\DailyPostsMail</className>
      <methodName>envelope</methodName>
      <methodSignature>envelope(): Illuminate\Mail\Mailables\Envelope</methodSignature>
      <fullMethod>envelope(): Illuminate\Mail\Mailables\Envelope</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Mail</package>
      <className>App\Mail\DailyPostsMail</className>
      <methodName>content</methodName>
      <methodSignature>content(): Illuminate\Mail\Mailables\Content</methodSignature>
      <fullMethod>content(): Illuminate\Mail\Mailables\Content</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Mail</package>
      <className>App\Mail\DailyPostsMail</className>
      <methodName>attachments</methodName>
      <methodSignature>attachments(): array</methodSignature>
      <fullMethod>attachments(): array</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Mail</package>
      <className>App\Mail\WelcomeEmail</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($user, $password)</methodSignature>
      <fullMethod>__construct($user, $password)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Mail</package>
      <className>App\Mail\WelcomeEmail</className>
      <methodName>build</methodName>
      <methodSignature>build()</methodSignature>
      <fullMethod>build()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Notifications</package>
      <className>App\Notifications\CustomVerificationNotification</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct()</methodSignature>
      <fullMethod>__construct()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Notifications</package>
      <className>App\Notifications\CustomVerificationNotification</className>
      <methodName>via</methodName>
      <methodSignature>via($notifiable)</methodSignature>
      <fullMethod>via($notifiable)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Notifications</package>
      <className>App\Notifications\CustomVerificationNotification</className>
      <methodName>toMail</methodName>
      <methodSignature>toMail($notifiable)</methodSignature>
      <fullMethod>toMail($notifiable)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Notifications</package>
      <className>App\Notifications\CustomVerificationNotification</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray($notifiable)</methodSignature>
      <fullMethod>toArray($notifiable)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Notifications</package>
      <className>App\Notifications\CustomVerificationNotification</className>
      <methodName>verificationUrl</methodName>
      <methodSignature>verificationUrl($notifiable)</methodSignature>
      <fullMethod>verificationUrl($notifiable)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Notifications</package>
      <className>App\Notifications\ResetPasswordNotification</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(string $token)</methodSignature>
      <fullMethod>__construct(string $token)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Notifications</package>
      <className>App\Notifications\ResetPasswordNotification</className>
      <methodName>via</methodName>
      <methodSignature>via($notifiable)</methodSignature>
      <fullMethod>via($notifiable)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Notifications</package>
      <className>App\Notifications\ResetPasswordNotification</className>
      <methodName>toMail</methodName>
      <methodSignature>toMail($notifiable)</methodSignature>
      <fullMethod>toMail($notifiable)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Notifications</package>
      <className>App\Notifications\ResetPasswordNotification</className>
      <methodName>toArray</methodName>
      <methodSignature>toArray($notifiable)</methodSignature>
      <fullMethod>toArray($notifiable)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Policies</package>
      <className>App\Policies\SubscriptionPolicy</className>
      <methodName>view</methodName>
      <methodSignature>view(App\Models\User $user, App\Models\Subscription $subscription): bool</methodSignature>
      <fullMethod>view(App\Models\User $user, App\Models\Subscription $subscription): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Policies</package>
      <className>App\Policies\SubscriptionPolicy</className>
      <methodName>update</methodName>
      <methodSignature>update(App\Models\User $user, App\Models\Subscription $subscription): bool</methodSignature>
      <fullMethod>update(App\Models\User $user, App\Models\Subscription $subscription): bool</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Policies</package>
      <className>App\Policies\SubscriptionPolicy</className>
      <methodName>cancel</methodName>
      <methodSignature>cancel(App\Models\User $user, App\Models\Subscription $subscription): bool</methodSignature>
      <fullMethod>cancel(App\Models\User $user, App\Models\Subscription $subscription): bool</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Policies</package>
      <className>App\Policies\SubscriptionPolicy</className>
      <methodName>renew</methodName>
      <methodSignature>renew(App\Models\User $user, App\Models\Subscription $subscription): bool</methodSignature>
      <fullMethod>renew(App\Models\User $user, App\Models\Subscription $subscription): bool</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Policies</package>
      <className>App\Policies\SubscriptionPolicy</className>
      <methodName>createPayment</methodName>
      <methodSignature>createPayment(App\Models\User $user, App\Models\Subscription $subscription): bool</methodSignature>
      <fullMethod>createPayment(App\Models\User $user, App\Models\Subscription $subscription): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Providers</package>
      <className>App\Providers\AppServiceProvider</className>
      <methodName>register</methodName>
      <methodSignature>register(): void</methodSignature>
      <fullMethod>register(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Providers</package>
      <className>App\Providers\AppServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot(): void</methodSignature>
      <fullMethod>boot(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Providers</package>
      <className>App\Providers\AuthServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot(): void</methodSignature>
      <fullMethod>boot(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Providers</package>
      <className>App\Providers\BroadcastServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot(): void</methodSignature>
      <fullMethod>boot(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Providers</package>
      <className>App\Providers\EventServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot(): void</methodSignature>
      <fullMethod>boot(): void</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Providers</package>
      <className>App\Providers\EventServiceProvider</className>
      <methodName>shouldDiscoverEvents</methodName>
      <methodSignature>shouldDiscoverEvents(): bool</methodSignature>
      <fullMethod>shouldDiscoverEvents(): bool</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Providers</package>
      <className>App\Providers\RouteServiceProvider</className>
      <methodName>boot</methodName>
      <methodSignature>boot(): void</methodSignature>
      <fullMethod>boot(): void</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\FloodAIService</className>
      <methodName>loadData</methodName>
      <methodSignature>loadData($filename)</methodSignature>
      <fullMethod>loadData($filename)</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\FloodAIService</className>
      <methodName>calculateFeatureRanges</methodName>
      <methodSignature>calculateFeatureRanges($rawData, $headers)</methodSignature>
      <fullMethod>calculateFeatureRanges($rawData, $headers)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\FloodAIService</className>
      <methodName>normalizeValue</methodName>
      <methodSignature>normalizeValue($column, $value)</methodSignature>
      <fullMethod>normalizeValue($column, $value)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\FloodAIService</className>
      <methodName>handleMissingValue</methodName>
      <methodSignature>handleMissingValue($column)</methodSignature>
      <fullMethod>handleMissingValue($column)</fullMethod>
      <crap>7</crap>
      <complexity>7</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\FloodAIService</className>
      <methodName>calculateAverage</methodName>
      <methodSignature>calculateAverage($column)</methodSignature>
      <fullMethod>calculateAverage($column)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\FloodAIService</className>
      <methodName>calculateMedian</methodName>
      <methodSignature>calculateMedian($column)</methodSignature>
      <fullMethod>calculateMedian($column)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\FloodAIService</className>
      <methodName>getLastKnownValueOrAverage</methodName>
      <methodSignature>getLastKnownValueOrAverage($column)</methodSignature>
      <fullMethod>getLastKnownValueOrAverage($column)</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\FloodAIService</className>
      <methodName>engineerFeatures</methodName>
      <methodSignature>engineerFeatures()</methodSignature>
      <fullMethod>engineerFeatures()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\FloodAIService</className>
      <methodName>calculateRollingAverage</methodName>
      <methodSignature>calculateRollingAverage($feature, $days, $currentDate)</methodSignature>
      <fullMethod>calculateRollingAverage($feature, $days, $currentDate)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\FloodAIService</className>
      <methodName>daysSinceSignificantRainfall</methodName>
      <methodSignature>daysSinceSignificantRainfall($currentDate, $threshold)</methodSignature>
      <fullMethod>daysSinceSignificantRainfall($currentDate, $threshold)</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\FloodAIService</className>
      <methodName>getSeasonFeatures</methodName>
      <methodSignature>getSeasonFeatures($date)</methodSignature>
      <fullMethod>getSeasonFeatures($date)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\FloodAIService</className>
      <methodName>calculateRateOfChange</methodName>
      <methodSignature>calculateRateOfChange($feature, $currentDate)</methodSignature>
      <fullMethod>calculateRateOfChange($feature, $currentDate)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\FloodAIService</className>
      <methodName>getValueAtDate</methodName>
      <methodSignature>getValueAtDate($feature, $date)</methodSignature>
      <fullMethod>getValueAtDate($feature, $date)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\FloodAIService</className>
      <methodName>prepareDataForTraining</methodName>
      <methodSignature>prepareDataForTraining()</methodSignature>
      <fullMethod>prepareDataForTraining()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\FloodAIService</className>
      <methodName>extractFeatures</methodName>
      <methodSignature>extractFeatures($row)</methodSignature>
      <fullMethod>extractFeatures($row)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\FloodAIService</className>
      <methodName>trainModel</methodName>
      <methodSignature>trainModel()</methodSignature>
      <fullMethod>trainModel()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\FloodAIService</className>
      <methodName>predict</methodName>
      <methodSignature>predict($inputData)</methodSignature>
      <fullMethod>predict($inputData)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\FloodAIService</className>
      <methodName>calculateFloodRisk</methodName>
      <methodSignature>calculateFloodRisk($rainfall, $soilMoisture, $temperature, $humidity, $riverLevel, $landUsage)</methodSignature>
      <fullMethod>calculateFloodRisk($rainfall, $soilMoisture, $temperature, $humidity, $riverLevel, $landUsage)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\UtilService</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(Kreait\Firebase\Messaging $messaging)</methodSignature>
      <fullMethod>__construct(Kreait\Firebase\Messaging $messaging)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\UtilService</className>
      <methodName>get_descendants</methodName>
      <methodSignature>get_descendants($children, $descendants)</methodSignature>
      <fullMethod>get_descendants($children, $descendants)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\UtilService</className>
      <methodName>get_ascendants</methodName>
      <methodSignature>get_ascendants($child, $ascendants)</methodSignature>
      <fullMethod>get_ascendants($child, $ascendants)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\UtilService</className>
      <methodName>getZonesWithLevelId4ForUser</methodName>
      <methodSignature>getZonesWithLevelId4ForUser($user)</methodSignature>
      <fullMethod>getZonesWithLevelId4ForUser($user)</fullMethod>
      <crap>9.31</crap>
      <complexity>4</complexity>
      <coverage>30.77</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\UtilService</className>
      <methodName>sendWebNotification</methodName>
      <methodSignature>sendWebNotification($title, $body, array $deviceKeys): array</methodSignature>
      <fullMethod>sendWebNotification($title, $body, array $deviceKeys): array</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\UtilService</className>
      <methodName>sendNotification</methodName>
      <methodSignature>sendNotification($title, $body, array $deviceTokens)</methodSignature>
      <fullMethod>sendNotification($title, $body, array $deviceTokens)</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\UtilService</className>
      <methodName>sendNewNotification</methodName>
      <methodSignature>sendNewNotification(string $title, string $body, array $tokens)</methodSignature>
      <fullMethod>sendNewNotification(string $title, string $body, array $tokens)</fullMethod>
      <crap>9.49</crap>
      <complexity>8</complexity>
      <coverage>71.43</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>App\Service</package>
      <className>App\Service\UtilService</className>
      <methodName>test</methodName>
      <methodSignature>test()</methodSignature>
      <fullMethod>test()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
  </methods>
</crap_result>
