<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="AuthController.php" path="\Http\Controllers\Api">
    <totals>
      <lines total="183" comments="53" code="130" executable="49" executed="41" percent="83.67"/>
      <methods count="4" tested="2" percent="50.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Http\Controllers\Api\AuthController" start="28" executable="49" executed="41" crap="18.26">
      <namespace name="App\Http\Controllers\Api"/>
      <method name="register" signature="register(App\Http\Requests\Auth\RegisterRequest $request)" start="38" end="95" crap="9.59" executable="24" executed="17" coverage="70.833333333333"/>
      <method name="login" signature="login(App\Http\Requests\Auth\LoginRequest $request)" start="105" end="152" crap="6" executable="20" executed="19" coverage="95"/>
      <method name="logout" signature="logout()" start="159" end="163" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="verifyToken" signature="verifyToken(Illuminate\Support\Facades\Request $request)" start="172" end="180" crap="2" executable="3" executed="3" coverage="100"/>
    </class>
    <coverage>
      <line nr="40">
        <covered by="Tests\Feature\AuthControllerTest::testRegister"/>
      </line>
      <line nr="42">
        <covered by="Tests\Feature\AuthControllerTest::testRegister"/>
      </line>
      <line nr="44">
        <covered by="Tests\Feature\AuthControllerTest::testRegister"/>
      </line>
      <line nr="45">
        <covered by="Tests\Feature\AuthControllerTest::testRegister"/>
      </line>
      <line nr="46">
        <covered by="Tests\Feature\AuthControllerTest::testRegister"/>
      </line>
      <line nr="47">
        <covered by="Tests\Feature\AuthControllerTest::testRegister"/>
      </line>
      <line nr="48">
        <covered by="Tests\Feature\AuthControllerTest::testRegister"/>
      </line>
      <line nr="49">
        <covered by="Tests\Feature\AuthControllerTest::testRegister"/>
      </line>
      <line nr="50">
        <covered by="Tests\Feature\AuthControllerTest::testRegister"/>
      </line>
      <line nr="64">
        <covered by="Tests\Feature\AuthControllerTest::testRegister"/>
      </line>
      <line nr="65">
        <covered by="Tests\Feature\AuthControllerTest::testRegister"/>
      </line>
      <line nr="70">
        <covered by="Tests\Feature\AuthControllerTest::testRegister"/>
      </line>
      <line nr="72">
        <covered by="Tests\Feature\AuthControllerTest::testRegister"/>
      </line>
      <line nr="76">
        <covered by="Tests\Feature\AuthControllerTest::testRegister"/>
      </line>
      <line nr="81">
        <covered by="Tests\Feature\AuthControllerTest::testRegister"/>
      </line>
      <line nr="82">
        <covered by="Tests\Feature\AuthControllerTest::testRegister"/>
      </line>
      <line nr="94">
        <covered by="Tests\Feature\AuthControllerTest::testRegister"/>
      </line>
      <line nr="107">
        <covered by="Tests\Feature\AuthControllerTest::testLogin"/>
        <covered by="Tests\Feature\AuthControllerTest::testLogout"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_email"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_phone"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_validation_rules"/>
        <covered by="Tests\Feature\AuthControllerTest::test_rate_limiting"/>
        <covered by="Tests\Feature\AuthControllerTest::test_unverified_council_user_login"/>
        <covered by="Tests\Feature\AuthControllerTest::test_fcm_token_update"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_response_includes_user_data"/>
        <covered by="Tests\Feature\AuthControllerTest::test_invalid_credentials"/>
      </line>
      <line nr="109">
        <covered by="Tests\Feature\AuthControllerTest::testLogin"/>
        <covered by="Tests\Feature\AuthControllerTest::testLogout"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_email"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_phone"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_validation_rules"/>
        <covered by="Tests\Feature\AuthControllerTest::test_unverified_council_user_login"/>
        <covered by="Tests\Feature\AuthControllerTest::test_fcm_token_update"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_response_includes_user_data"/>
      </line>
      <line nr="111">
        <covered by="Tests\Feature\AuthControllerTest::testLogin"/>
        <covered by="Tests\Feature\AuthControllerTest::testLogout"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_email"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_phone"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_validation_rules"/>
        <covered by="Tests\Feature\AuthControllerTest::test_unverified_council_user_login"/>
        <covered by="Tests\Feature\AuthControllerTest::test_fcm_token_update"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_response_includes_user_data"/>
      </line>
      <line nr="113">
        <covered by="Tests\Feature\AuthControllerTest::testLogin"/>
        <covered by="Tests\Feature\AuthControllerTest::testLogout"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_email"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_phone"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_validation_rules"/>
        <covered by="Tests\Feature\AuthControllerTest::test_unverified_council_user_login"/>
        <covered by="Tests\Feature\AuthControllerTest::test_fcm_token_update"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_response_includes_user_data"/>
      </line>
      <line nr="115">
        <covered by="Tests\Feature\AuthControllerTest::testLogin"/>
        <covered by="Tests\Feature\AuthControllerTest::testLogout"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_email"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_phone"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_validation_rules"/>
        <covered by="Tests\Feature\AuthControllerTest::test_unverified_council_user_login"/>
        <covered by="Tests\Feature\AuthControllerTest::test_fcm_token_update"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_response_includes_user_data"/>
      </line>
      <line nr="116">
        <covered by="Tests\Feature\AuthControllerTest::testLogin"/>
        <covered by="Tests\Feature\AuthControllerTest::testLogout"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_email"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_phone"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_validation_rules"/>
        <covered by="Tests\Feature\AuthControllerTest::test_unverified_council_user_login"/>
        <covered by="Tests\Feature\AuthControllerTest::test_fcm_token_update"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_response_includes_user_data"/>
      </line>
      <line nr="129">
        <covered by="Tests\Feature\AuthControllerTest::testLogin"/>
        <covered by="Tests\Feature\AuthControllerTest::testLogout"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_email"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_phone"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_validation_rules"/>
        <covered by="Tests\Feature\AuthControllerTest::test_unverified_council_user_login"/>
        <covered by="Tests\Feature\AuthControllerTest::test_fcm_token_update"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_response_includes_user_data"/>
      </line>
      <line nr="132">
        <covered by="Tests\Feature\AuthControllerTest::testLogin"/>
        <covered by="Tests\Feature\AuthControllerTest::testLogout"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_email"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_phone"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_validation_rules"/>
        <covered by="Tests\Feature\AuthControllerTest::test_unverified_council_user_login"/>
        <covered by="Tests\Feature\AuthControllerTest::test_fcm_token_update"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_response_includes_user_data"/>
      </line>
      <line nr="134">
        <covered by="Tests\Feature\AuthControllerTest::testLogin"/>
        <covered by="Tests\Feature\AuthControllerTest::testLogout"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_email"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_phone"/>
        <covered by="Tests\Feature\AuthControllerTest::test_unverified_council_user_login"/>
      </line>
      <line nr="135">
        <covered by="Tests\Feature\AuthControllerTest::test_unverified_council_user_login"/>
      </line>
      <line nr="136">
        <covered by="Tests\Feature\AuthControllerTest::test_unverified_council_user_login"/>
      </line>
      <line nr="138">
        <covered by="Tests\Feature\AuthControllerTest::test_unverified_council_user_login"/>
      </line>
      <line nr="142">
        <covered by="Tests\Feature\AuthControllerTest::testLogin"/>
        <covered by="Tests\Feature\AuthControllerTest::testLogout"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_email"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_phone"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_validation_rules"/>
        <covered by="Tests\Feature\AuthControllerTest::test_fcm_token_update"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_response_includes_user_data"/>
      </line>
      <line nr="144">
        <covered by="Tests\Feature\AuthControllerTest::testLogin"/>
        <covered by="Tests\Feature\AuthControllerTest::testLogout"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_email"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_phone"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_validation_rules"/>
        <covered by="Tests\Feature\AuthControllerTest::test_fcm_token_update"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_response_includes_user_data"/>
      </line>
      <line nr="145">
        <covered by="Tests\Feature\AuthControllerTest::test_login_validation_rules"/>
        <covered by="Tests\Feature\AuthControllerTest::test_fcm_token_update"/>
      </line>
      <line nr="148">
        <covered by="Tests\Feature\AuthControllerTest::testLogin"/>
        <covered by="Tests\Feature\AuthControllerTest::testLogout"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_email"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_phone"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_validation_rules"/>
        <covered by="Tests\Feature\AuthControllerTest::test_fcm_token_update"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_response_includes_user_data"/>
      </line>
      <line nr="149">
        <covered by="Tests\Feature\AuthControllerTest::testLogin"/>
        <covered by="Tests\Feature\AuthControllerTest::testLogout"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_email"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_phone"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_validation_rules"/>
        <covered by="Tests\Feature\AuthControllerTest::test_fcm_token_update"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_response_includes_user_data"/>
      </line>
      <line nr="151">
        <covered by="Tests\Feature\AuthControllerTest::testLogin"/>
        <covered by="Tests\Feature\AuthControllerTest::testLogout"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_email"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_phone"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_validation_rules"/>
        <covered by="Tests\Feature\AuthControllerTest::test_fcm_token_update"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_response_includes_user_data"/>
      </line>
      <line nr="161">
        <covered by="Tests\Feature\AuthControllerTest::testLogout"/>
      </line>
      <line nr="162">
        <covered by="Tests\Feature\AuthControllerTest::testLogout"/>
      </line>
      <line nr="175">
        <covered by="Tests\Feature\Auth\AuthenticationTest::test_verify_token_with_valid_token"/>
        <covered by="Tests\Feature\Auth\AuthenticationTest::test_verify_token_with_invalid_token"/>
      </line>
      <line nr="176">
        <covered by="Tests\Feature\Auth\AuthenticationTest::test_verify_token_with_valid_token"/>
      </line>
      <line nr="178">
        <covered by="Tests\Feature\Auth\AuthenticationTest::test_verify_token_with_invalid_token"/>
      </line>
      <line nr="137">
        <covered by="Tests\Feature\AuthControllerTest::test_unverified_council_user_login"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Http\Controllers\Api</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Models\User</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Mail\WelcomeEmail</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Services\User\UserCreate</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Http\JsonResponse</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Spatie\Permission\Models\Role</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Http\Controllers\Controller</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Http\Resources\UserResource</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Support\Facades\Auth</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Support\Facades\Mail</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Auth\Events\Registered</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Support\Facades\Request</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Support\Facades\Session</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Support\Facades\Storage</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Http\Requests\Auth\LoginRequest</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Http\Requests\Auth\RegisterRequest</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Validation\ValidationException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21"/>
      <line no="22"/>
      <line no="23">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT"> * Class AuthController</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT"> * @package App\Http\Controllers\Api</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT"> * @group Module Authentification</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="28">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AuthController</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Controller</token>
      </line>
      <line no="29">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="30"/>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="32">
        <token name="T_DOC_COMMENT">     * Register users</token>
      </line>
      <line no="33">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="34">
        <token name="T_DOC_COMMENT">     * @param RegisterRequest $request</token>
      </line>
      <line no="35">
        <token name="T_DOC_COMMENT">     * @return JsonResponse</token>
      </line>
      <line no="36">
        <token name="T_DOC_COMMENT">     * @unauthenticated</token>
      </line>
      <line no="37">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">register</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">RegisterRequest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">all</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Envoyer un e-mail &#xE0; l'utilisateur</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">Mail</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">to</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">email</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">send</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">WelcomeEmail</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="43"/>
      <line no="44">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strcmp</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">env</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'APP_ENV'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'local'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strcmp</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">env</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'APP_ENV'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'dev'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strcmp</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">env</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'APP_ENV'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'testing'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasFile</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'avatar'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$mediaFile</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">file</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'avatar'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$imageName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">time</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_DOT">.</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'.'</token>
        <token name="T_DOT">.</token>
        <token name="T_VARIABLE">$mediaFile</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getClientOriginalExtension</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Storage</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">disk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'public'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">putFileAs</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'avatar'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$mediaFile</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$imageName</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'avatar'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Storage</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">url</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">save</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ELSE">else</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasFile</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'avatar'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$mediaFile</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">file</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'avatar'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$imageName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">time</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_DOT">.</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'.'</token>
        <token name="T_DOT">.</token>
        <token name="T_VARIABLE">$mediaFile</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getClientOriginalExtension</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Storage</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">disk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'s3'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">putFileAs</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'avatar'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$mediaFile</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$imageName</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'avatar'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Storage</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">url</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">save</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="61"/>
      <line no="62"/>
      <line no="63">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Mettre &#xE0; jour le token FCM</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'fcm_token'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">update</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'fcm_token'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'fcm_token'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="67"/>
      <line no="68"/>
      <line no="69">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Attribuer le r&#xF4;le par d&#xE9;faut (par exemple, 'default') &#xE0; l'utilisateur</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$defaultRole</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Role</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">where</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'name'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'default'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">first</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="71"/>
      <line no="72">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$defaultRole</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assignRole</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$defaultRole</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="75"/>
      <line no="76">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$token</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createToken</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'authtoken'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="77"/>
      <line no="78">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Envoyer la notification de v&#xE9;rification par e-mail</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// $user-&gt;sendEmailVerificationNotification();</token>
      </line>
      <line no="80"/>
      <line no="81">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$userData</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserResource</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">make</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">loadMissing</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'zone'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">toArray</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$userData</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'token'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$token</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">plainTextToken</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="83"/>
      <line no="84">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// event(new Registered($user));</token>
      </line>
      <line no="85"/>
      <line no="86">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// if (!$userData['email_verified_at']) {</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     return response()-&gt;success(['token' =&gt; $token-&gt;plainTextToken, "verified" =&gt; false], __('Please verify you mail') , 200);</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// }</token>
      </line>
      <line no="89"/>
      <line no="90">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// if (!$userData['active']) {</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     return response()-&gt;success(['token' =&gt; $token-&gt;plainTextToken, "isActive" =&gt; false], __('Please wait for activation') , 200);</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// }</token>
      </line>
      <line no="93"/>
      <line no="94">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">success</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$userData</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'User registered. Please check your email'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">201</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="96"/>
      <line no="97">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="98">
        <token name="T_DOC_COMMENT">     * Login users</token>
      </line>
      <line no="99">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="100">
        <token name="T_DOC_COMMENT">     * @param LoginRequest $request</token>
      </line>
      <line no="101">
        <token name="T_DOC_COMMENT">     * @return JsonResponse</token>
      </line>
      <line no="102">
        <token name="T_DOC_COMMENT">     * @throws ValidationException</token>
      </line>
      <line no="103">
        <token name="T_DOC_COMMENT">     * @unauthenticated</token>
      </line>
      <line no="104">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">login</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">LoginRequest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">authenticate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="108"/>
      <line no="109">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$validated</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">validated</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="110"/>
      <line no="111">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$token</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">user</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createToken</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'authtoken'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="112"/>
      <line no="113">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">Session</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">put</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'token'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$token</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">plainTextToken</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="114"/>
      <line no="115">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">Auth</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">attempt</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">only</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'email'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">Auth</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">attempt</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'phone'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$validated</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'email'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$validated</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">success</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Invalid login credentials'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">200</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="119"/>
      <line no="120">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// if (!Auth::user()-&gt;email_verified_at) {</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     return response()-&gt;success(['token' =&gt; $token-&gt;plainTextToken, "verified" =&gt; false], __('Please verify you mail') , 200);</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// }</token>
      </line>
      <line no="123"/>
      <line no="124">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// if (!Auth::user()-&gt;active) {</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     return response()-&gt;success(['token' =&gt; $token-&gt;plainTextToken, "isActive" =&gt; false], __('Please wait for activation') , 200);</token>
      </line>
      <line no="126">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// }</token>
      </line>
      <line no="127"/>
      <line no="128">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// R&#xE9;cup&#xE9;ration de l'utilisateur authentifi&#xE9;</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Auth</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">user</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="130"/>
      <line no="131">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// V&#xE9;rification du type d'utilisateur</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">type</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'COUNCIL'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// V&#xE9;rifier si l'email n'est pas v&#xE9;rifi&#xE9;</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">email_verified_at</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="135">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">success</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'token'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$token</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">plainTextToken</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'verified'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
      </line>
      <line no="138">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Please verify your email'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">200</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="139">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="140">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="141"/>
      <line no="142">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">with</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'zone'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">where</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'id'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Auth</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">user</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">id</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">first</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="143"/>
      <line no="144">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">filled</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'fcm_token'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">update</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'fcm_token'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">fcm_token</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="147"/>
      <line no="148">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserResource</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">make</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">toArray</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="149">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'token'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$token</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">plainTextToken</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="150"/>
      <line no="151">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">success</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$user</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'You are logged in'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">200</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="152">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="153"/>
      <line no="154">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="155">
        <token name="T_DOC_COMMENT">     * Logout users</token>
      </line>
      <line no="156">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="157">
        <token name="T_DOC_COMMENT">     * @return JsonResponse</token>
      </line>
      <line no="158">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="159">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">logout</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="160">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="161">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">auth</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">user</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">tokens</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">delete</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="162">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">success</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'You Logged out'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">200</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="163">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="164"/>
      <line no="165">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="166">
        <token name="T_DOC_COMMENT">     * Checks the validity of the Sanctum authentication token.</token>
      </line>
      <line no="167">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="168">
        <token name="T_DOC_COMMENT">     * @param  \Illuminate\Http\Request  $request</token>
      </line>
      <line no="169">
        <token name="T_DOC_COMMENT">     * @return \Illuminate\Http\JsonResponse</token>
      </line>
      <line no="170">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="171"/>
      <line no="172">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">verifyToken</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="173">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="174">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// V&#xE9;rifiez si l'utilisateur est authentifi&#xE9; via Sanctum</token>
      </line>
      <line no="175">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Auth</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">guard</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'sanctum'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">check</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="176">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">json</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Token is valid'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">200</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="177">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="178">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">response</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">json</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'message'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Token is not valid'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">401</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="179">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="180">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="181"/>
      <line no="182">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="183"/>
    </source>
  </file>
</phpunit>
