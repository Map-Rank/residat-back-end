<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="RedirectIfAuthenticated.php" path="\Http\Middleware">
    <totals>
      <lines total="36" comments="8" code="28" executable="5" executed="5" percent="100.00"/>
      <methods count="1" tested="1" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Http\Middleware\RedirectIfAuthenticated" start="12" executable="5" executed="5" crap="4">
      <namespace name="App\Http\Middleware"/>
      <method name="handle" signature="handle(Illuminate\Http\Request $request, Closure $next, string $guards): Symfony\Component\HttpFoundation\Response" start="19" end="34" crap="4" executable="5" executed="5" coverage="100"/>
    </class>
    <coverage>
      <line nr="21">
        <covered by="Tests\Feature\Auth\AuthenticationTest::test_login_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Auth\AuthenticationTest::test_users_can_authenticate_using_the_login_screen"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_reset_password_view_can_be_displayed"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_user_can_reset_password"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_password_reset_fails_and_returns_error"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_reset_password_fails_with_invalid_email"/>
        <covered by="Tests\Feature\PasswordResetLinkControllerTest::test_sends_password_reset_link_with_valid_email"/>
        <covered by="Tests\Feature\PasswordResetLinkControllerTest::test_does_not_send_password_reset_link_for_invalid_email"/>
        <covered by="Tests\Feature\Middleware\RedirectIfAuthenticatedTest::test_authenticated_user_is_redirected_to_home"/>
      </line>
      <line nr="23">
        <covered by="Tests\Feature\Auth\AuthenticationTest::test_login_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Auth\AuthenticationTest::test_users_can_authenticate_using_the_login_screen"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_reset_password_view_can_be_displayed"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_user_can_reset_password"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_password_reset_fails_and_returns_error"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_reset_password_fails_with_invalid_email"/>
        <covered by="Tests\Feature\PasswordResetLinkControllerTest::test_sends_password_reset_link_with_valid_email"/>
        <covered by="Tests\Feature\PasswordResetLinkControllerTest::test_does_not_send_password_reset_link_for_invalid_email"/>
        <covered by="Tests\Feature\Middleware\RedirectIfAuthenticatedTest::test_authenticated_user_is_redirected_to_home"/>
      </line>
      <line nr="24">
        <covered by="Tests\Feature\Auth\AuthenticationTest::test_login_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Auth\AuthenticationTest::test_users_can_authenticate_using_the_login_screen"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_reset_password_view_can_be_displayed"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_user_can_reset_password"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_password_reset_fails_and_returns_error"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_reset_password_fails_with_invalid_email"/>
        <covered by="Tests\Feature\PasswordResetLinkControllerTest::test_sends_password_reset_link_with_valid_email"/>
        <covered by="Tests\Feature\PasswordResetLinkControllerTest::test_does_not_send_password_reset_link_for_invalid_email"/>
        <covered by="Tests\Feature\Middleware\RedirectIfAuthenticatedTest::test_authenticated_user_is_redirected_to_home"/>
      </line>
      <line nr="25">
        <covered by="Tests\Feature\Middleware\RedirectIfAuthenticatedTest::test_authenticated_user_is_redirected_to_home"/>
      </line>
      <line nr="33">
        <covered by="Tests\Feature\Auth\AuthenticationTest::test_login_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Auth\AuthenticationTest::test_users_can_authenticate_using_the_login_screen"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_reset_password_view_can_be_displayed"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_user_can_reset_password"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_password_reset_fails_and_returns_error"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_reset_password_fails_with_invalid_email"/>
        <covered by="Tests\Feature\PasswordResetLinkControllerTest::test_sends_password_reset_link_with_valid_email"/>
        <covered by="Tests\Feature\PasswordResetLinkControllerTest::test_does_not_send_password_reset_link_for_invalid_email"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Http\Middleware</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Providers\RouteServiceProvider</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Closure</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Http\Request</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Support\Facades\App</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Support\Facades\Auth</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\HttpFoundation\Response</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11"/>
      <line no="12">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">RedirectIfAuthenticated</token>
      </line>
      <line no="13">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT">     * Handle an incoming request.</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT">     * @param  \Closure(\Illuminate\Http\Request): (\Symfony\Component\HttpFoundation\Response)  $next</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">handle</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Closure</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$next</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELLIPSIS">...</token>
        <token name="T_VARIABLE">$guards</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Response</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$guards</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$guards</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$guards</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22"/>
      <line no="23">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$guards</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$guard</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Auth</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">guard</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$guard</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">check</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">redirect</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">RouteServiceProvider</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">HOME</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="28"/>
      <line no="29">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// if (! $request-&gt;secure() &amp;&amp; App::environment() === 'production') {</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     return redirect()-&gt;secure($request-&gt;getRequestUri());</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// }</token>
      </line>
      <line no="32"/>
      <line no="33">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$next</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="35">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="36"/>
    </source>
  </file>
</phpunit>
