<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="AuthServiceProvider.php" path="\Providers">
    <totals>
      <lines total="27" comments="10" code="17" executable="1" executed="1" percent="100.00"/>
      <methods count="1" tested="1" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Providers\AuthServiceProvider" start="8" executable="1" executed="1" crap="1">
      <namespace name="App\Providers"/>
      <method name="boot" signature="boot(): void" start="22" end="25" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="25">
        <covered by="Tests\Feature\AdminDeleteAccountTest::test_web_destroy_deletes_account"/>
        <covered by="Tests\Unit\View\Components\AppLayoutTest::testRenderMethod"/>
        <covered by="Tests\Feature\AuthControllerTest::testLogin"/>
        <covered by="Tests\Feature\AuthControllerTest::testRegister"/>
        <covered by="Tests\Feature\AuthControllerTest::testLogout"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_email"/>
        <covered by="Tests\Feature\AuthControllerTest::test_user_can_login_with_phone"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_validation_rules"/>
        <covered by="Tests\Feature\AuthControllerTest::test_rate_limiting"/>
        <covered by="Tests\Feature\AuthControllerTest::test_unverified_council_user_login"/>
        <covered by="Tests\Feature\AuthControllerTest::test_fcm_token_update"/>
        <covered by="Tests\Feature\AuthControllerTest::test_login_response_includes_user_data"/>
        <covered by="Tests\Feature\AuthControllerTest::test_invalid_credentials"/>
        <covered by="Tests\Feature\Auth\AuthenticationTest::test_login_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Auth\AuthenticationTest::test_users_can_authenticate_using_the_login_screen"/>
        <covered by="Tests\Feature\Auth\AuthenticationTest::test_users_can_logout"/>
        <covered by="Tests\Feature\Auth\AuthenticationTest::test_verify_token_with_valid_token"/>
        <covered by="Tests\Feature\Auth\AuthenticationTest::test_verify_token_with_invalid_token"/>
        <covered by="Tests\Feature\Auth\EmailVerificationTest::test_email_verification_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Auth\EmailVerificationTest::test_email_can_be_verified"/>
        <covered by="Tests\Feature\Auth\PasswordConfirmationTest::test_confirm_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Auth\PasswordConfirmationTest::test_password_is_not_confirmed_with_invalid_password"/>
        <covered by="Tests\Feature\Auth\PasswordResetTest::test_reset_password_link_can_be_requested"/>
        <covered by="Tests\Feature\Auth\PasswordResetTest::test_reset_password_screen_can_be_rendered"/>
        <covered by="Tests\Feature\Auth\PasswordResetTest::test_password_can_be_reset_with_valid_token"/>
        <covered by="Tests\Feature\Auth\PasswordResetTest::test_old_password_is_incorrect"/>
        <covered by="Tests\Feature\Auth\PasswordResetTest::test_passwords_do_not_match"/>
        <covered by="Tests\Feature\Auth\PasswordResetTest::test_password_update_successful"/>
        <covered by="Tests\Feature\Auth\PasswordUpdateTest::test_password_can_be_updated"/>
        <covered by="Tests\Feature\Http\Middleware\AuthenticateTest::test_it_redirects_unauthenticated_users_to_login_for_web_requests"/>
        <covered by="Tests\Feature\Http\Middleware\AuthenticateTest::test_it_allows_authenticated_users_for_web_requests"/>
        <covered by="Tests\Feature\Http\Middleware\AuthenticateTest::test_it_allows_json_requests_without_redirection"/>
        <covered by="Tests\Feature\Http\Controllers\CompanyControllerTest::it_can_store_a_company"/>
        <covered by="Tests\Feature\Http\Controllers\CompanyControllerWebTest::test_index_returns_companies_view"/>
        <covered by="Tests\Feature\Http\Controllers\CompanyControllerWebTest::test_show_displays_specific_company"/>
        <covered by="Tests\Feature\Http\Controllers\CompanyControllerWebTest::test_destroy_deletes_company"/>
        <covered by="Tests\Feature\Http\Controllers\CompanyControllerWebTest::test_destroy_handles_company_not_found"/>
        <covered by="Tests\Feature\CustomVerificationNotificationTest::test_notification_is_sent"/>
        <covered by="Tests\Feature\CustomVerificationNotificationTest::test_email_contains_verification_url_and_otp_code"/>
        <covered by="Tests\Feature\DeleteAccountTest::test_own_destroy_deletes_account"/>
        <covered by="Tests\Feature\Disasters\DisasterControllerApiTest::test_desasters_index"/>
        <covered by="Tests\Feature\Disasters\DisasterControllerApiTest::test_desasters_show"/>
        <covered by="Tests\Feature\Disasters\DisasterControllerWebTest::test_disaster_index"/>
        <covered by="Tests\Feature\Disasters\DisasterControllerWebTest::test_disaster_create"/>
        <covered by="Tests\Feature\Disasters\DisasterControllerWebTest::test_disaster_store"/>
        <covered by="Tests\Feature\Disasters\DisasterControllerWebTest::test_disaster_show"/>
        <covered by="Tests\Feature\Disasters\DisasterControllerWebTest::test_disaster_edit"/>
        <covered by="Tests\Feature\Disasters\DisasterControllerWebTest::test_disaster_update"/>
        <covered by="Tests\Feature\Disasters\DisasterControllerWebTest::test_disaster_destroy"/>
        <covered by="DivisionsTest::test_divisions_with_valid_request"/>
        <covered by="DivisionsTest::test_subdivisions_with_valid_request"/>
        <covered by="DivisionsTest::test_edit_returns_edit_view_with_parent_zone_data"/>
        <covered by="DivisionsTest::test_edit_returns_edit_view_with_empty_zones_when_no_parent"/>
        <covered by="DivisionsTest::test_edit_throws_model_not_found_exception_for_nonexistent_zone"/>
        <covered by="Tests\Feature\EmailVerificationControllerTest::it_returns_success_when_email_is_already_verified"/>
        <covered by="Tests\Feature\EmailVerificationControllerTest::it_verifies_email_if_not_already_verified"/>
        <covered by="Tests\Feature\EmailVerificationControllerTest::it_returns_success_when_resending_verification_email_if_already_verified"/>
        <covered by="Tests\Feature\EmailVerificationControllerTest::it_resends_verification_email_if_not_already_verified"/>
        <covered by="Tests\Feature\Auth\EmailVerificationNotificationControllerTest::test_it_redirects_if_email_is_already_verified"/>
        <covered by="Tests\Feature\Auth\EmailVerificationNotificationControllerTest::test_it_sends_verification_email_if_not_verified"/>
        <covered by="Tests\Feature\EventControllerTest::it_can_list_events"/>
        <covered by="Tests\Feature\EventControllerTest::it_validates_list_events_parameters"/>
        <covered by="Tests\Feature\EventControllerTest::it_can_store_event"/>
        <covered by="Tests\Feature\EventControllerTest::it_can_show_event"/>
        <covered by="Tests\Feature\EventControllerTest::it_can_update_event"/>
        <covered by="Tests\Feature\EventControllerTest::it_can_delete_event"/>
        <covered by="Tests\Feature\EventControllerTest::it_prevents_unauthorized_event_deletion"/>
        <covered by="Tests\Feature\EventControllerWebTest::test_index_displays_events_with_pagination"/>
        <covered by="Tests\Feature\EventControllerWebTest::test_admin_can_delete_event"/>
        <covered by="Tests\Feature\EventControllerWebTest::test_non_admin_cannot_delete_event"/>
        <covered by="Tests\Feature\FeedbackControllerTest::test_store_feedback_without_file"/>
        <covered by="Tests\Feature\FeedbackControllerTest::test_store_feedback_with_file_in_local_dev_testing"/>
        <covered by="Tests\Feature\FeedbackControllerWebTest::test_index_displays_feedbacks_with_pagination"/>
        <covered by="Tests\Feature\FeedbackControllerWebTest::test_admin_can_delete_feedback"/>
        <covered by="Tests\Feature\FeedbackControllerWebTest::test_non_admin_cannot_delete_feedback"/>
        <covered by="Tests\Feature\FollowControllerTest::test_follow_user_successfully"/>
        <covered by="Tests\Feature\FollowControllerTest::test_follow_user_already_followed"/>
        <covered by="Tests\Feature\FollowControllerTest::test_unfollow_user_successfully"/>
        <covered by="Tests\Feature\FollowControllerTest::test_unfollow_user_not_followed"/>
        <covered by="Tests\Feature\FollowControllerTest::test_retrieving_followers_of_user"/>
        <covered by="Tests\Feature\FollowControllerTest::test_retrieving_following_of_user"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_reset_password_view_can_be_displayed"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_user_can_reset_password"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_password_reset_fails_and_returns_error"/>
        <covered by="Tests\Feature\Auth\NewPasswordControllerTest::test_reset_password_fails_with_invalid_email"/>
        <covered by="Tests\Feature\NotificationControllerTest::it_can_list_notifications"/>
        <covered by="Tests\Feature\NotificationControllerTest::it_cannot_list_notifications_without_authentication"/>
        <covered by="Tests\Feature\NotificationControllerTest::test_store_creates_notification"/>
        <covered by="Tests\Feature\NotificationControllerTest::it_returns_notifications_for_user_zone_and_descendants"/>
        <covered by="Tests\Feature\NotificationControllerTest::it_returns_error_for_unauthenticated_user"/>
        <covered by="Tests\Feature\PackageControllerApiTest::test_packages_index"/>
        <covered by="Tests\Feature\PackageControllerApiTest::test_packages_show_success"/>
        <covered by="Tests\Feature\PackageControllerApiTest::test_packages_show_not_found"/>
        <covered by="Tests\Feature\PackageControllerApiTest::test_packages_store"/>
        <covered by="Tests\Feature\PackageControllerApiTest::test_packages_update"/>
        <covered by="Tests\Feature\PackageControllerApiTest::test_package_update_not_found"/>
        <covered by="Tests\Feature\PackageControllerApiTest::test_packages_destroy"/>
        <covered by="Tests\Feature\PasswordResetLinkControllerTest::test_sends_password_reset_link_with_valid_email"/>
        <covered by="Tests\Feature\PasswordResetLinkControllerTest::test_does_not_send_password_reset_link_for_invalid_email"/>
        <covered by="Tests\Feature\PermissionControllerTest::testGetAllRolesWithPermissions"/>
        <covered by="Tests\Feature\PermissionControllerTest::testGetAllUsersWithRolesAndPermissions"/>
        <covered by="Tests\Feature\PermissionControllerTest::testStoreRole"/>
        <covered by="Tests\Feature\PermissionControllerTest::testStoreRoleValidationFails"/>
        <covered by="Tests\Feature\PermissionControllerTest::testUpdateRole"/>
        <covered by="Tests\Feature\PermissionControllerTest::testUpdateRoleValidationFails"/>
        <covered by="Tests\Feature\PermissionControllerTest::testStorePermission"/>
        <covered by="Tests\Feature\PermissionControllerTest::testStorePermissionValidationFails"/>
        <covered by="Tests\Feature\PermissionControllerTest::testGetAllPermissions"/>
        <covered by="Tests\Feature\PermissionControllerTest::testUpdateUniqPermission"/>
        <covered by="Tests\Feature\PermissionControllerTest::testUpdateUniqPermissionValidationFails"/>
        <covered by="Tests\Feature\PermissionControllerTest::testDeletePermission"/>
        <covered by="Tests\Feature\Http\Controllers\PostControllerTest::test_index"/>
        <covered by="Tests\Feature\Http\Controllers\PostControllerTest::test_store"/>
        <covered by="Tests\Feature\Http\Controllers\PostControllerTest::test_show"/>
        <covered by="Tests\Feature\Http\Controllers\PostControllerTest::test_update"/>
        <covered by="Tests\Feature\Http\Controllers\PostControllerTest::test_destroy"/>
        <covered by="Tests\Feature\Http\Controllers\PostControllerTest::testLike"/>
        <covered by="Tests\Feature\Http\Controllers\PostControllerTest::testComment"/>
        <covered by="Tests\Feature\Http\Controllers\PostControllerTest::testShare"/>
        <covered by="Tests\Feature\Http\Controllers\PostControllerTest::testDeleteInteraction"/>
        <covered by="Tests\Feature\Http\Controllers\PostControllerTest::testIndexWithZoneId"/>
        <covered by="Tests\Feature\Http\Controllers\PostControllerTest::test_topic_resource"/>
        <covered by="Tests\Feature\Http\Controllers\PostControllerTest::test_interaction_resource"/>
        <covered by="Tests\Feature\Http\Controllers\PostControllerWebTest::it_can_display_a_listing_of_posts"/>
        <covered by="Tests\Feature\Http\Controllers\PostControllerWebTest::it_can_show_a_specific_post"/>
        <covered by="Tests\Feature\Http\Controllers\PostControllerWebTest::it_can_allow_or_disallow_a_post"/>
        <covered by="Tests\Feature\Http\Controllers\PostControllerWebTest::it_can_delete_a_post_with_media_and_associations"/>
        <covered by="ProfileControllerTest::testUserProfile"/>
        <covered by="ProfileControllerTest::testUserInteractions"/>
        <covered by="ProfileControllerTest::testUserProfileUpdate"/>
        <covered by="ProfileControllerWebTest::it_can_display_the_profile_edit_form"/>
        <covered by="ProfileControllerWebTest::it_can_update_the_user_profile_information"/>
        <covered by="ProfileControllerWebTest::it_can_delete_the_user_account"/>
        <covered by="Tests\Feature\Middleware\RedirectIfAuthenticatedTest::test_authenticated_user_is_redirected_to_home"/>
        <covered by="Tests\Feature\ReportControllerTest::test_index_displays_reports"/>
        <covered by="Tests\Feature\ReportControllerTest::test_create_resource_completion_displays_zones"/>
        <covered by="Tests\Feature\ReportControllerTest::test_create_fishing_vulnerability_displays_zones"/>
        <covered by="Tests\Feature\ReportControllerTest::test_create_water_stress_displays_zones"/>
        <covered by="Tests\Feature\ReportControllerTest::test_create_migration_displays_zones"/>
        <covered by="Tests\Feature\ReportControllerTest::test_create_health_displays_zones"/>
        <covered by="Tests\Feature\ReportControllerTest::test_create_agriculture_displays_zones"/>
        <covered by="Tests\Feature\ReportControllerTest::test_create_infrastructure_displays_zones"/>
        <covered by="Tests\Feature\ReportControllerTest::test_create_social_displays_zones"/>
        <covered by="Tests\Feature\ReportControllerTest::test_create_select_security_displays_zones"/>
        <covered by="Tests\Feature\ReportControllerTest::test_store_creates_report_with_image_and_items"/>
        <covered by="Tests\Feature\ReportControllerTest::test_destroy_deletes_report"/>
        <covered by="Tests\Feature\ResetPasswordNotificationTest::test_notification_is_sent"/>
        <covered by="Tests\Feature\ResetPasswordNotificationTest::test_email_contains_reset_password_link"/>
        <covered by="Tests\Feature\SectorControllerApiTest::it_can_fetch_all_sectors"/>
        <covered by="Tests\Feature\SectorControllerApiTest::it_can_filter_sectors_by_name"/>
        <covered by="Tests\Feature\SectorControllerApiTest::it_validates_invalid_parameters_for_index"/>
        <covered by="Tests\Feature\SectorControllerApiTest::it_can_fetch_a_specific_sector"/>
        <covered by="Tests\Feature\SectorControllerApiTest::it_returns_404_for_non_existent_sector"/>
        <covered by="Tests\Feature\SectorControllerTest::test_fetch_sectors"/>
        <covered by="Tests\Feature\SectorControllerTest::test_store_creates_sector"/>
        <covered by="Tests\Feature\SectorControllerTest::test_edit_returns_successful_response"/>
        <covered by="Tests\Feature\SectorControllerTest::test_update_updates_sector"/>
        <covered by="Tests\Feature\SectorControllerTest::test_destroy_deletes_sector"/>
        <covered by="Tests\Feature\SendDailyPostsEmailTest::test_job_is_dispatched"/>
        <covered by="Tests\Feature\SendDailyPostsEmailTest::test_email_is_sent_to_correct_recipients"/>
        <covered by="Tests\Feature\SubscriptionControllerTest::it_lists_subscriptions_for_authenticated_user"/>
        <covered by="Tests\Feature\SubscriptionControllerTest::it_creates_a_subscription_and_payment"/>
        <covered by="Tests\Feature\SubscriptionControllerTest::it_prevents_creating_a_subscription_with_an_existing_active_one"/>
        <covered by="Tests\Feature\SubscriptionControllerTest::it_updates_a_subscription"/>
        <covered by="Tests\Feature\SubscriptionControllerTest::it_cancels_an_active_subscription"/>
        <covered by="Tests\Feature\SubscriptionControllerTest::it_renews_an_expired_subscription_and_creates_payment"/>
        <covered by="Tests\Feature\SubscriptionControllerTest::it_returns_the_current_subscription"/>
        <covered by="Tests\Feature\Subscriptions\SubscriptionPolicyTest::it_allows_viewing_own_subscription"/>
        <covered by="Tests\Feature\Subscriptions\SubscriptionPolicyTest::it_prevents_updating_cancelled_subscription"/>
        <covered by="Tests\Feature\Subscriptions\SubscriptionPolicyTest::it_allows_canceling_active_subscription"/>
        <covered by="Tests\Feature\Subscriptions\SubscriptionPolicyTest::it_prevents_renewing_active_subscription"/>
        <covered by="Tests\Feature\Subscriptions\SubscriptionPolicyTest::it_allows_renewing_expired_subscription"/>
        <covered by="Tests\Feature\Subscriptions\SubscriptionPolicyTest::test_user_can_create_payment_for_own_subscription"/>
        <covered by="Tests\Feature\Subscriptions\SubscriptionPolicyTest::test_user_cannot_create_payment_for_other_subscription"/>
        <covered by="Tests\Feature\UserControllerTest::it_can_display_a_listing_of_users"/>
        <covered by="Tests\Feature\UserControllerTest::it_can_display_the_specified_user"/>
        <covered by="Tests\Feature\UserControllerTest::it_can_ban_a_user"/>
        <covered by="Tests\Feature\UserControllerTest::it_can_activate_a_user"/>
        <covered by="Tests\Unit\UtilServiceTest::it_returns_all_ascendants_of_a_zone"/>
        <covered by="Tests\Unit\UtilServiceTest::it_returns_empty_if_zone_has_no_parents"/>
        <covered by="Tests\Feature\ZoneControllerTest::test_fetch_zones"/>
        <covered by="Tests\Feature\ZoneControllerTest::test_fetch_single_zone"/>
        <covered by="Tests\Feature\ZoneControllerTest::testStoreZoneSuccess"/>
        <covered by="Tests\Feature\ZoneControllerTest::testStoreZoneFailsValidation"/>
        <covered by="Tests\Feature\ZoneControllerTest::testUpdateZone"/>
        <covered by="Tests\Feature\ZoneControllerTest::testDestroy"/>
        <covered by="Tests\Feature\ZoneControllerWebTest::it_returns_zones_with_valid_parameters"/>
        <covered by="Tests\Feature\ZoneControllerWebTest::it_filters_zones_by_name"/>
        <covered by="Tests\Feature\ZoneControllerWebTest::it_filters_zones_by_parent_id"/>
        <covered by="Tests\Feature\ZoneControllerWebTest::it_can_show_create_form_with_levels"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Providers</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_COMMENT">// use Illuminate\Support\Facades\Gate;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Foundation\Support\Providers\AuthServiceProvider</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ServiceProvider</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7"/>
      <line no="8">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AuthServiceProvider</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ServiceProvider</token>
      </line>
      <line no="9">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="10">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT">     * The model to policy mappings for the application.</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="13">
        <token name="T_DOC_COMMENT">     * @var array&lt;class-string, class-string&gt;</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$policies</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18"/>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT">     * Register any authentication / authorization services.</token>
      </line>
      <line no="21">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">boot</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="26">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="27"/>
    </source>
  </file>
</phpunit>
